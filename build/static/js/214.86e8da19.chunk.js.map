{"version":3,"file":"static/js/214.86e8da19.chunk.js","mappings":"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","sources":["components/form/targetForm/TargetForm.jsx","pages/app/target/component/ManageTarget.jsx","pages/app/target/service/target.request.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Button,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Stack,\r\n  Switch,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport FormTextField from \"../../textfield/FormTextField\";\r\nimport { tokens } from \"../../../assets/color/theme\";\r\nimport \"../styles.css\";\r\nimport { getAllCompanyRequest } from \"../../../pages/auth/users/service/users.request\";\r\nimport FormTextDropdown from \"../../dropdown/FormTextDropdown\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  boxShadow: \"none\",\r\n  textAlign: \"start\",\r\n  color: theme.palette.text.secondary,\r\n  flexGrow: 1,\r\n}));\r\nconst SwitchItem = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  boxShadow: \"none\",\r\n  textAlign: \"end\",\r\n  color: theme.palette.text.primary,\r\n  flexGrow: 1,\r\n}));\r\n\r\nconst TargetForm = (props) => {\r\n  const {\r\n    initialValue = {},\r\n    handleFormData,\r\n    onHandleClose,\r\n    clickedBtn,\r\n    errorMessage,\r\n    setErrorMessage,\r\n    company_id,\r\n  } = props;\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [name, setName] = useState({\r\n    value: initialValue ? initialValue.name : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [companyList, setCompanyList] = useState([]);\r\n  const [companyId, setCompanyId] = useState({\r\n    value: initialValue ? initialValue.company_id : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [description, setDescription] = useState({\r\n    value: initialValue ? initialValue.description : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [typeList, setTypeList] = useState([\r\n    { label: \"Number\", value: \"Number\" },\r\n    { label: \"SIP\", value: \"SIP\" },\r\n  ]);\r\n  const [numberType, setNumberType] = useState({\r\n    value: initialValue ? initialValue?.type : \"Number\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [number, setNumber] = useState({\r\n    value: initialValue ? initialValue.forwarding_number : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [timeout, setTimeout] = useState({\r\n    value: initialValue ? initialValue?.connection_timeout : null,\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [monthlyCap, setMonthlyCap] = useState(\r\n    clickedBtn === \"edit\"\r\n      ? initialValue.monthly_cap === null\r\n        ? false\r\n        : true\r\n      : false\r\n  );\r\n  const [monthlyValue, setMonthlyValue] = useState({\r\n    value: initialValue ? initialValue.monthly_cap : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [dailyCap, setDailyCap] = useState(\r\n    clickedBtn === \"edit\"\r\n      ? initialValue.daily_cap === null\r\n        ? false\r\n        : true\r\n      : false\r\n  );\r\n\r\n  const [dailyValue, setDailyValue] = useState({\r\n    value: initialValue ? initialValue.daily_cap : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [hourlyCap, setHourlyCap] = useState(\r\n    clickedBtn === \"edit\"\r\n      ? initialValue.hourly_cap === null\r\n        ? false\r\n        : true\r\n      : false\r\n  );\r\n  const [hourlyValue, setHourlyValue] = useState({\r\n    value: initialValue ? initialValue.hourly_cap : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [maximumCap, setMaximumCap] = useState(\r\n    clickedBtn === \"edit\"\r\n      ? initialValue.max_concurrency === null\r\n        ? false\r\n        : true\r\n      : false\r\n  );\r\n  const [maximunValue, setMaximumValue] = useState({\r\n    value: initialValue ? initialValue.max_concurrency : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAllCompanyRequest()\r\n      .then((res) => {\r\n        const result = res.data?.data?.data?.map((ele) => {\r\n          return {\r\n            value: ele.id,\r\n            label: ele.company_name,\r\n          };\r\n        });\r\n        setCompanyList(result);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const handleChangeName = (value) => {\r\n    setErrorMessage(\"\");\r\n    setName(value);\r\n  };\r\n  const handleChangeDescription = (value) => {\r\n    setErrorMessage(\"\");\r\n    setDescription(value);\r\n  };\r\n  const handleChangeCompany = (value) => {\r\n    setErrorMessage(\"\");\r\n    setCompanyId(value);\r\n  };\r\n  const handleChangeType = (value) => {\r\n    setErrorMessage(\"\");\r\n    setNumberType(value);\r\n  };\r\n  const handleChangeNo = (value) => {\r\n    setErrorMessage(\"\");\r\n    setNumber(value);\r\n  };\r\n  const handleChangeTimeout = (value) => {\r\n    setErrorMessage(\"\");\r\n    setTimeout(value);\r\n  };\r\n  const handleChangeMonthlyCap = (value) => {\r\n    setErrorMessage(\"\");\r\n    setMonthlyValue(value);\r\n  };\r\n  const handleChangeDailyCap = (value) => {\r\n    setErrorMessage(\"\");\r\n    setDailyValue(value);\r\n  };\r\n  const handleChangeHourlyCap = (value) => {\r\n    setErrorMessage(\"\");\r\n    setHourlyValue(value);\r\n  };\r\n  const handleChangeMaximumCap = (value) => {\r\n    setErrorMessage(\"\");\r\n    setMaximumValue(value);\r\n  };\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      name: name.value,\r\n      description: description.value,\r\n      forwarding_number: number.value,\r\n      connection_timeout: timeout.value,\r\n      type: numberType.value,\r\n      monthly_cap: monthlyCap === true ? monthlyValue.value : null,\r\n      daily_cap: dailyCap === true ? dailyValue.value : null,\r\n      hourly_cap: hourlyCap === true ? hourlyValue.value : null,\r\n      max_concurrency: maximumCap === true ? maximunValue.value : null,\r\n      company_id:\r\n        company_id === \"0\" ? parseInt(companyId.value) : parseInt(company_id),\r\n    };\r\n    handleFormData(data);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        boxShadow: \"none\",\r\n        backgroundColor: colors.form[500],\r\n        color: colors.form[100],\r\n      }}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <IconButton aria-label=\"settings\" onClick={onHandleClose}>\r\n            <MdClose color={colors.form[100]} />\r\n          </IconButton>\r\n        }\r\n        title={clickedBtn === \"add\" ? \"Add Target\" : \"Update Target\"}\r\n      />\r\n      <CardContent color={colors.form[100]}>\r\n        <Box\r\n          component=\"form\"\r\n          sx={{\r\n            \"& .MuiTextField-root\": { mb: 1 },\r\n            \"&::-webkit-scrollbar\": {\r\n              width: \"6px\",\r\n              borderRadius: \"3px\",\r\n            },\r\n            \"&::-webkit-scrollbar-thumb\": {\r\n              backgroundColor: \"gray\",\r\n              borderRadius: \"3px\",\r\n            },\r\n            \"&::-webkit-scrollbar-track\": {\r\n              backgroundColor: \"lightgray\",\r\n              borderRadius: \"3px\",\r\n            },\r\n          }}\r\n          className={\"formResponsiveHeight\"}\r\n          noValidate={true}\r\n        >\r\n          {errorMessage && <span className=\"error_msg\">{errorMessage}</span>}\r\n          <Grid container spacing={1}>\r\n            {company_id === \"0\" && (\r\n              <Grid item xs={12} md={6}>\r\n                <FormTextDropdown\r\n                  Value={companyId.value}\r\n                  onSelect={handleChangeCompany}\r\n                  label={\"Company *\"}\r\n                  CustomErrorLine={\"Choose one\"}\r\n                  Required={true}\r\n                  Options={companyList}\r\n                />\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={12} md={6}>\r\n              <FormTextField\r\n                type=\"alpha\"\r\n                placeholder={\"Enter Target Name\"}\r\n                label={\"Name\"}\r\n                Value={name.value}\r\n                onChangeText={handleChangeName}\r\n                Required={true}\r\n                CustomErrorLine={\"Enter proper name\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <FormTextField\r\n                type=\"textarea\"\r\n                placeholder={\"Enter Description\"}\r\n                label={\"Description\"}\r\n                Value={description.value}\r\n                onChangeText={handleChangeDescription}\r\n                Required={false}\r\n                CustomErrorLine={\"Enter proper description\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <FormTextDropdown\r\n                Value={numberType.value}\r\n                onSelect={handleChangeType}\r\n                label={\"Did Type *\"}\r\n                CustomErrorLine={\"Choose one\"}\r\n                Required={true}\r\n                Options={typeList}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <FormTextField\r\n                type={numberType.value === \"Number\" ? \"phoneno\" : \"textarea\"}\r\n                placeholder={\r\n                  numberType.value === \"Number\" ? \"Enter Number\" : \"Enter Sip\"\r\n                }\r\n                label={numberType.value === \"Number\" ? \"Number\" : \"Sip\"}\r\n                Value={number.value}\r\n                onChangeText={handleChangeNo}\r\n                Required={true}\r\n                CustomErrorLine={\r\n                  numberType.value === \"Number\"\r\n                    ? \"Enter proper number\"\r\n                    : \"Enter proper sip\"\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <FormTextField\r\n                type=\"num\"\r\n                placeholder={\"Enter connection time out\"}\r\n                label={\"Connection timeout\"}\r\n                Value={timeout.value}\r\n                onChangeText={handleChangeTimeout}\r\n                Required={false}\r\n                CustomErrorLine={\"Enter proper description\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={12} mb={1}>\r\n              <Typography>Cap Setting</Typography>\r\n              <Divider />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"baseline\"\r\n              >\r\n                <Item>Monthly Cap</Item>\r\n                <SwitchItem>\r\n                  <Switch\r\n                    checked={monthlyCap}\r\n                    onChange={() => setMonthlyCap(!monthlyCap)}\r\n                    name=\"inputToggle\"\r\n                    color=\"secondary\"\r\n                  />\r\n                </SwitchItem>\r\n                <span style={{ width: \"40%\" }}>\r\n                  <FormTextField\r\n                    type=\"capvalue\"\r\n                    placeholder={\"Enter cap\"}\r\n                    label={\"Monthly Cap\"}\r\n                    Value={monthlyValue.value}\r\n                    onChangeText={handleChangeMonthlyCap}\r\n                    Required={true}\r\n                    CustomErrorLine={\"Enter proper cap value\"}\r\n                    isHidden={!monthlyCap}\r\n                  />\r\n                </span>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"baseline\"\r\n              >\r\n                <Item>Daily cap</Item>\r\n                <SwitchItem>\r\n                  <Switch\r\n                    checked={dailyCap}\r\n                    onChange={() => setDailyCap(!dailyCap)}\r\n                    name=\"inputToggle\"\r\n                    color=\"secondary\"\r\n                  />\r\n                </SwitchItem>\r\n                <span style={{ width: \"40%\" }}>\r\n                  <FormTextField\r\n                    type=\"capvalue\"\r\n                    placeholder={\"Enter cap\"}\r\n                    label={\"Daily Cap\"}\r\n                    Value={dailyValue.value}\r\n                    onChangeText={handleChangeDailyCap}\r\n                    Required={true}\r\n                    CustomErrorLine={\"Enter proper cap value\"}\r\n                    isHidden={!dailyCap}\r\n                  />\r\n                </span>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"baseline\"\r\n              >\r\n                <Item>{\"Hourly cap\"}</Item>\r\n                <SwitchItem>\r\n                  <Switch\r\n                    checked={hourlyCap}\r\n                    onChange={() => setHourlyCap(!hourlyCap)}\r\n                    name=\"inputToggle\"\r\n                    color=\"secondary\"\r\n                  />\r\n                </SwitchItem>\r\n                <span style={{ width: \"40%\" }}>\r\n                  <FormTextField\r\n                    type=\"capvalue\"\r\n                    placeholder={\"Enter cap\"}\r\n                    label={\"Hourly Cap\"}\r\n                    Value={hourlyValue.value}\r\n                    onChangeText={handleChangeHourlyCap}\r\n                    Required={true}\r\n                    CustomErrorLine={\"Enter proper cap value\"}\r\n                    isHidden={!hourlyCap}\r\n                  />\r\n                </span>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"baseline\"\r\n              >\r\n                <Item>Maximum Concurrency</Item>\r\n                <SwitchItem>\r\n                  <Switch\r\n                    checked={maximumCap}\r\n                    onChange={() => setMaximumCap(!maximumCap)}\r\n                    name=\"inputToggle\"\r\n                    color=\"secondary\"\r\n                  />\r\n                </SwitchItem>\r\n                <span style={{ width: \"40%\" }}>\r\n                  <FormTextField\r\n                    type=\"capvalue\"\r\n                    placeholder={\"Enter cap\"}\r\n                    label={\"Maximum Concurrency\"}\r\n                    Value={maximunValue.value}\r\n                    onChangeText={handleChangeMaximumCap}\r\n                    Required={true}\r\n                    CustomErrorLine={\"Enter proper cap value\"}\r\n                    isHidden={!maximumCap}\r\n                  />\r\n                </span>\r\n              </Stack>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions sx={{ justifyContent: \"space-between\", mr: 1, ml: 1 }}>\r\n        <Button size=\"small\" variant=\"contained\" onClick={onHandleClose}>\r\n          {\"Cancel\"}\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          size=\"small\"\r\n          onClick={(e) => handleClick(e)}\r\n          sx={{ backgroundColor: colors.greenAccent[500] }}\r\n          variant=\"contained\"\r\n        >\r\n          {clickedBtn === \"add\" ? \"Save\" : \"Update\"}\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TargetForm;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Pagination } from \"rsuite\";\r\nimport { Box, Fab, Tooltip, Typography, useTheme } from \"@mui/material\";\r\nimport { Add } from \"iconsax-react\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { TbHome2, TbTargetArrow } from \"react-icons/tb\";\r\nimport Breadcrumb from \"../../../../components/breadcrumb/BreadCrumb\";\r\nimport StatusChip from \"../../../../components/chip/StatusChip\";\r\nimport { tokens } from \"../../../../assets/color/theme\";\r\nimport { FormModal as Modal } from \"../../../../components/modal/FormModal\";\r\nimport TargetForm from \"../../../../components/form/targetForm/TargetForm\";\r\nimport {\r\n  createTargetRequest,\r\n  getAllTargetRequest,\r\n  updateTargetsStatusRequest,\r\n  updateTargetRequest,\r\n  deleteTargetsRequest,\r\n} from \"../service/target.request\";\r\nimport Loader from \"../../../../components/Loader/Loader\";\r\nimport DefaultTable from \"../../../../components/tables/DefaultTable\";\r\nimport Copyright from \"../../../../components/footer/Footer\";\r\n\r\nconst paths = [\r\n  {\r\n    name: \"Dashboard\",\r\n    path: \"\",\r\n    icon: <TbHome2 />,\r\n  },\r\n  {\r\n    name: \"Targets\",\r\n    icon: <TbTargetArrow />,\r\n  },\r\n];\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst ManageTarget = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const getId = JSON.parse(localStorage.getItem(\"user\"));\r\n  const company_id = getId.user_data.company_id;\r\n  const [rows, setRows] = useState([]);\r\n  const [isLoader, setLoader] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [clickedBtn, setClickedBtn] = useState(\"\");\r\n  const [currentType, setCurrentType] = useState();\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [total, setTotal] = useState(0);\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [snackbarOpen, setSnackbarOpen] = useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"right\",\r\n  });\r\n  const [barVariant, setBarVariant] = useState(\"\");\r\n  const { vertical, horizontal, open } = snackbarOpen;\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: \"name\",\r\n        header: \"Name\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: true,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n        size: 100,\r\n      },\r\n      {\r\n        accessorKey: \"target_random_id\",\r\n        header: \"Random ID\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: true,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        // Cell: ({ cell }) => <>{cell.getValue()}</>,\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        size: 50,\r\n      },\r\n      {\r\n        accessorKey: \"hourly_cap\",\r\n        header: \"Hour\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: true,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n        size: 30,\r\n      },\r\n      {\r\n        accessorKey: \"daily_cap\",\r\n        header: \"Day\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: true,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n        size: 30,\r\n      },\r\n      {\r\n        accessorKey: \"monthly_cap\",\r\n        header: \"Month\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: true,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n        size: 30,\r\n      },\r\n      {\r\n        accessorKey: \"connection_timeout\",\r\n        header: \"Timeout\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: true,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n        size: 30,\r\n      },\r\n      {\r\n        accessorKey: \"status\",\r\n        header: \"Status\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: false,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        Cell: ({ cell }) => <StatusChip value={cell.getValue()} />,\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n        size: 30,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackbarOpen({ ...snackbarOpen, open: false });\r\n  };\r\n\r\n  const getAllTargets = (activePage, limit) => {\r\n    setLoader(true);\r\n    getAllTargetRequest(activePage, limit)\r\n      .then((res) => {\r\n        let getData = res.data.data.length === 0 ? [] : res.data.data.data;\r\n        setTotal(res.data.data.length === 0 ? 0 : res.data.data?.total);\r\n        setRows(getData);\r\n        setLoader(false);\r\n      })\r\n      .catch(() => {\r\n        setLoader(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllTargets(activePage, limit);\r\n  }, [activePage, limit]);\r\n\r\n  const openAddModal = () => {\r\n    setErrorMessage(\"\");\r\n    setIsOpen(true);\r\n  };\r\n  const handleModalClose = () => {\r\n    setErrorMessage(\"\");\r\n    setIsOpen(false);\r\n  };\r\n  const handleSelectBtn = (btn) => {\r\n    setErrorMessage(\"\");\r\n    setClickedBtn(btn);\r\n  };\r\n  const handleChangeEdit = (ele) => {\r\n    setClickedBtn(\"edit\");\r\n    setCurrentType(ele);\r\n    setIsOpen(true);\r\n  };\r\n  const handleStatusChange = (body) => {\r\n    setLoader(true);\r\n    const data = {\r\n      id: body.id,\r\n      status: body.status === 1 ? 0 : 1,\r\n    };\r\n    updateTargetsStatusRequest(data)\r\n      .then((res) => {\r\n        getAllTargets(activePage, limit);\r\n        setBarVariant(\"success\");\r\n        setMessage(res.data.message);\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setErrorMessage(\"\");\r\n        setIsOpen(false);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        setBarVariant(\"error\");\r\n        setMessage(err.message);\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setErrorMessage(\"\");\r\n        setIsOpen(false);\r\n        setLoader(false);\r\n      });\r\n  };\r\n\r\n  const handleAddTarget = (value) => {\r\n    setLoader(true);\r\n    createTargetRequest(value)\r\n      .then((res) => {\r\n        getAllTargets(activePage, limit);\r\n        setLoader(false);\r\n        setErrorMessage(\"\");\r\n        setMessage(res.data.message);\r\n        setBarVariant(\"success\");\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setIsOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n        setErrorMessage(err.message);\r\n      });\r\n  };\r\n\r\n  const handleUpdateTarget = (data) => {\r\n    setLoader(true);\r\n    const updateData = {\r\n      data: {\r\n        user_id: currentType.user_id,\r\n        company_id: data.company_id,\r\n        name: data.name,\r\n        type: data.type,\r\n        description: data.description,\r\n        forwarding_number: data.forwarding_number,\r\n        connection_timeout: data.connection_timeout,\r\n        monthly_cap: data.monthly_cap,\r\n        daily_cap: data.daily_cap,\r\n        hourly_cap: data.hourly_cap,\r\n        max_concurrency: data.max_concurrency,\r\n        status: currentType.status,\r\n      },\r\n      id: currentType.id,\r\n    };\r\n    updateTargetRequest(updateData)\r\n      .then((res) => {\r\n        getAllTargets(activePage, limit);\r\n        setLoader(false);\r\n        setErrorMessage(\"\");\r\n        setBarVariant(\"success\");\r\n        setMessage(res.data.message);\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setIsOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n        setErrorMessage(err.message);\r\n      });\r\n  };\r\n\r\n  const handleChangeDelete = (body) => {\r\n    setLoader(true);\r\n    const data = {\r\n      id: body.id,\r\n      is_delete: body.deleted_at === null ? 1 : 0,\r\n    };\r\n    deleteTargetsRequest(data)\r\n      .then((res) => {\r\n        getAllTargets(activePage, limit);\r\n        setBarVariant(\"success\");\r\n        setMessage(res.data.message);\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setErrorMessage(\"\");\r\n        setIsOpen(false);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n      });\r\n  };\r\n\r\n  const selectModal = () => {\r\n    return (\r\n      <TargetForm\r\n        company_id={company_id}\r\n        handleFormData={\r\n          clickedBtn === \"add\" ? handleAddTarget : handleUpdateTarget\r\n        }\r\n        onHandleClose={handleModalClose}\r\n        clickedBtn={clickedBtn}\r\n        initialValue={clickedBtn === \"edit\" ? currentType : {}}\r\n        errorMessage={errorMessage}\r\n        setErrorMessage={setErrorMessage}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoader && <Loader />}\r\n      <Snackbar\r\n        open={open}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert\r\n          onClose={handleClose}\r\n          severity={barVariant}\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Box\r\n        sx={{\r\n          \"& .rs-pagination-group\": {\r\n            color: colors.layoutColor[200],\r\n          },\r\n          \"& .MuiTypography-root\": {\r\n            color: colors.layoutColor[200],\r\n          },\r\n          mt: 1,\r\n          ml: 2,\r\n          mr: 2,\r\n          mb: 2,\r\n          height: \"80%\",\r\n          backgroundColor: \"inherit\",\r\n        }}\r\n      >\r\n        <Breadcrumb pathList={paths} />\r\n        <Box>\r\n          <Modal modal_width={\"50%\"} isOpen={isOpen}>\r\n            {selectModal()}\r\n          </Modal>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              mb: 1,\r\n            }}\r\n          >\r\n            <div>\r\n              <Typography variant=\"h5\">{\"Manage Targets\"}</Typography>\r\n            </div>\r\n            <div style={{ zIndex: 1 }}>\r\n              <Fab\r\n                aria-label=\"add\"\r\n                size=\"small\"\r\n                sx={{\r\n                  boxShadow: \"none\",\r\n                  backgroundColor: colors.greenAccent[500],\r\n                }}\r\n                onClick={() => {\r\n                  openAddModal();\r\n                  handleSelectBtn(\"add\");\r\n                }}\r\n              >\r\n                <Tooltip title=\"Add\">\r\n                  <Add />\r\n                </Tooltip>\r\n              </Fab>\r\n            </div>\r\n          </Box>\r\n          <Box>\r\n            <DefaultTable\r\n              isLoading={isLoader}\r\n              data={rows}\r\n              column={columns}\r\n              handleEditAction={handleChangeEdit}\r\n              handleDeleteAction={handleChangeDelete}\r\n              handlePlayPause={handleStatusChange}\r\n              isSearchable={true}\r\n              isEditable={true}\r\n              isDeletable={true}\r\n              isStatusChangable={false}\r\n              isPlayPause={true}\r\n            />\r\n            <Pagination\r\n              style={{\r\n                marginTop: 5,\r\n              }}\r\n              layout={[\"total\", \"-\", \"pager\", \"skip\"]}\r\n              size={\"xs\"}\r\n              prev={true}\r\n              next={true}\r\n              first={true}\r\n              last={true}\r\n              ellipsis={true}\r\n              boundaryLinks={true}\r\n              total={total}\r\n              limit={limit}\r\n              maxButtons={5}\r\n              activePage={activePage}\r\n              onChangePage={setActivePage}\r\n              limitOptions={[5, 10, 25, 50, 100]}\r\n              onChangeLimit={setLimit}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Copyright />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageTarget;\r\n","import { axios } from \"../../../../api/setup.interseptor\";\r\n\r\nexport const getAllTargetRequest = (page, perpage) => {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/target?page=${page}&perpage=${perpage}`,\r\n  });\r\n};\r\n\r\nexport const createTargetRequest = (body) => {\r\n  return axios({\r\n    method: \"POST\",\r\n    url: \"/target\",\r\n    data: body,\r\n  });\r\n};\r\n\r\nexport const updateTargetRequest = (value) => {\r\n  return axios({\r\n    method: \"PUT\",\r\n    url: `/target/${value.id}`,\r\n    data: value.data,\r\n  });\r\n};\r\n\r\nexport const updateTargetsStatusRequest = (body) => {\r\n  return axios({\r\n    method: \"PATCH\",\r\n    url: `/target/changeStatus/${body.id}`,\r\n    data: { status: body.status },\r\n  });\r\n};\r\n\r\nexport const deleteTargetsRequest = (body) => {\r\n  return axios({\r\n    method: \"DELETE\",\r\n    url: `/target/delete/${body.id}`,\r\n    data: { is_delete: body.is_delete },\r\n  });\r\n};\r\n\r\nexport const getAllCompanyRequest = () => {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/company`,\r\n  });\r\n};\r\n"],"names":["Item","styled","Paper","_ref","theme","typography","body2","boxShadow","textAlign","color","palette","text","secondary","flexGrow","SwitchItem","_ref2","primary","props","initialValue","handleFormData","onHandleClose","clickedBtn","errorMessage","setErrorMessage","company_id","useTheme","colors","tokens","mode","name","setName","useState","value","error","success","companyList","setCompanyList","companyId","setCompanyId","description","setDescription","typeList","setTypeList","label","numberType","setNumberType","type","number","setNumber","forwarding_number","timeout","setTimeout","connection_timeout","monthlyCap","setMonthlyCap","monthly_cap","monthlyValue","setMonthlyValue","dailyCap","setDailyCap","daily_cap","dailyValue","setDailyValue","hourlyCap","setHourlyCap","hourly_cap","hourlyValue","setHourlyValue","maximumCap","setMaximumCap","max_concurrency","maximunValue","setMaximumValue","useEffect","getAllCompanyRequest","then","res","_res$data","_res$data$data","_res$data$data$data","result","data","map","ele","id","company_name","catch","err","console","log","_jsxs","Card","sx","backgroundColor","form","children","_jsx","CardHeader","action","IconButton","onClick","MdClose","title","CardContent","Box","component","mb","width","borderRadius","className","noValidate","Grid","container","spacing","item","xs","md","FormTextDropdown","Value","onSelect","CustomErrorLine","Required","Options","FormTextField","placeholder","onChangeText","Typography","Divider","Stack","direction","justifyContent","alignItems","Switch","checked","onChange","style","isHidden","CardActions","mr","ml","Button","size","variant","e","preventDefault","parseInt","handleClick","greenAccent","paths","path","icon","TbHome2","TbTargetArrow","Alert","React","ref","MuiAlert","elevation","ManageTarget","JSON","parse","localStorage","getItem","user_data","rows","setRows","isLoader","setLoader","isOpen","setIsOpen","setClickedBtn","currentType","setCurrentType","message","setMessage","total","setTotal","activePage","setActivePage","limit","setLimit","snackbarOpen","setSnackbarOpen","open","vertical","horizontal","barVariant","setBarVariant","columns","useMemo","accessorKey","header","enableColumnDragging","enableGlobalFilter","enableColumnFilter","enableColumnActions","muiTableHeadCellProps","align","muiTableBodyCellProps","Cell","cell","StatusChip","getValue","handleClose","event","reason","getAllTargets","getAllTargetRequest","page","perpage","axios","method","url","concat","getData","length","handleModalClose","handleAddTarget","body","handleUpdateTarget","updateData","user_id","status","_Fragment","Loader","Snackbar","anchorOrigin","autoHideDuration","onClose","severity","layoutColor","mt","height","Breadcrumb","pathList","Modal","modal_width","TargetForm","display","zIndex","Fab","btn","Tooltip","Add","DefaultTable","isLoading","column","handleEditAction","handleDeleteAction","is_delete","deleteTargetsRequest","deleted_at","handlePlayPause","updateTargetsStatusRequest","isSearchable","isEditable","isDeletable","isStatusChangable","isPlayPause","Pagination","marginTop","layout","prev","next","first","last","ellipsis","boundaryLinks","maxButtons","onChangePage","limitOptions","onChangeLimit","Copyright"],"sourceRoot":""}