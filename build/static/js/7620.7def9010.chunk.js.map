{"version":3,"file":"static/js/7620.7def9010.chunk.js","mappings":"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","sources":["components/breadcrumb/BreadCrumb.jsx","pages/auth/changePassword/component/ChangePassword.jsx","pages/auth/changePassword/service/password.request.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport { emphasize, styled } from \"@mui/material/styles\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nconst Breadcrumb = (props) => {\r\n  const { pathList } = props;\r\n\r\n  const StyledBreadcrumb = styled(Chip)(({ theme }) => {\r\n    const backgroundColor =\r\n      theme.palette.mode === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[800];\r\n    return {\r\n      backgroundColor,\r\n      height: theme.spacing(3),\r\n      color: theme.palette.mode === \"light\" ? \"#141414\" : \"#f3f6f4\",\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      \"&:hover, &:focus\": {\r\n        backgroundColor: emphasize(backgroundColor, 0.06),\r\n      },\r\n      \"&:active\": {\r\n        boxShadow: theme.shadows[1],\r\n        backgroundColor: emphasize(backgroundColor, 0.12),\r\n      },\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div role=\"presentation\">\r\n      <Breadcrumbs aria-label=\"breadcrumb\">\r\n        {pathList.length &&\r\n          pathList.map((item, index) => {\r\n            if (index === pathList.length - 1) {\r\n              return (\r\n                <StyledBreadcrumb\r\n                  label={item.name}\r\n                  key={index}\r\n                  icon={item.icon}\r\n                />\r\n              );\r\n            } else {\r\n              return (\r\n                <Link\r\n                  to={{\r\n                    pathname: `/${item.path}`,\r\n                  }}\r\n                  key={index}\r\n                >\r\n                  <StyledBreadcrumb icon={item.icon} label={item.name} />\r\n                </Link>\r\n              );\r\n            }\r\n          })}\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React, { useState } from \"react\";\r\nimport { TbHome2 } from \"react-icons/tb\";\r\nimport { MdOutlineSyncLock } from \"react-icons/md\";\r\nimport Breadcrumb from \"../../../../components/breadcrumb/BreadCrumb\";\r\nimport { Box, Button, Grid, Paper, Typography, useTheme } from \"@mui/material\";\r\nimport FormTextField from \"../../../../components/textfield/FormTextField\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Loader from \"../../../../components/Loader/Loader\";\r\nimport { changePasswordRequest } from \"../service/password.request\";\r\nimport { useEffect } from \"react\";\r\nimport { tokens } from \"../../../../assets/color/theme\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst paths = [\r\n  {\r\n    name: \"Dashboard\",\r\n    path: \"\",\r\n    icon: <TbHome2 />,\r\n  },\r\n  {\r\n    name: \"Change Password\",\r\n    icon: <MdOutlineSyncLock />,\r\n  },\r\n];\r\n\r\nconst ChangePassword = () => {\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  const [snackbarOpen, setSnackbarOpen] = useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"right\",\r\n  });\r\n  const [barVariant, setBarVariant] = useState(\"\");\r\n  const [currentPassword, setCurrentPassword] = useState({\r\n    value: \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [password, setPassword] = useState({\r\n    value: \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [confirmPassword, seConfirmPassword] = useState({\r\n    value: \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [confirmErr, setConfirmErr] = useState(false);\r\n\r\n  const [isLoader, setIsLoader] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const { vertical, horizontal, open } = snackbarOpen;\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackbarOpen({ ...snackbarOpen, open: false });\r\n  };\r\n\r\n  const handleChngOldPassword = (value) => {\r\n    setCurrentPassword(value);\r\n  };\r\n  const handleChangePassword = (value) => {\r\n    setPassword(value);\r\n  };\r\n  const handleChngConfirmPassword = (value) => {\r\n    seConfirmPassword(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (password.value !== \"\") {\r\n      if (\r\n        password.value !== confirmPassword.value &&\r\n        confirmPassword.value !== \"\"\r\n      ) {\r\n        setConfirmErr(true);\r\n      } else {\r\n        setConfirmErr(false);\r\n      }\r\n    } else {\r\n      setConfirmErr(false);\r\n    }\r\n  }, [password, confirmPassword]);\r\n\r\n  const handleClickSubmit = () => {\r\n    setIsLoader(true);\r\n    const data = {\r\n      password: password.value,\r\n      password_confirmation: confirmPassword.value,\r\n      current_password: currentPassword.value,\r\n    };\r\n    changePasswordRequest(data)\r\n      .then((res) => {\r\n        setIsLoader(false);\r\n        setMessage(res.data.message);\r\n        setBarVariant(\"success\");\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setTimeout(() => {\r\n          navigate(\"/\");\r\n        }, 1000);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoader(false);\r\n        setMessage(err.message);\r\n        setBarVariant(\"error\");\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (barVariant === \"success\") {\r\n      setCurrentPassword({\r\n        value: \"\",\r\n        error: false,\r\n        success: false,\r\n      });\r\n      setPassword({\r\n        value: \"\",\r\n        error: false,\r\n        success: false,\r\n      });\r\n      seConfirmPassword({\r\n        value: \"\",\r\n        error: false,\r\n        success: false,\r\n      });\r\n    }\r\n  }, [barVariant]);\r\n\r\n  return (\r\n    <>\r\n      {isLoader && <Loader />}\r\n      <Snackbar\r\n        open={open}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        autoHideDuration={2000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert\r\n          onClose={handleClose}\r\n          severity={barVariant}\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Box\r\n        sx={{\r\n          mt: 1,\r\n          ml: 2,\r\n          mr: 2,\r\n          mb: 2,\r\n          height: \"auto\",\r\n          backgroundColor: \"inherit\",\r\n        }}\r\n      >\r\n        <Breadcrumb pathList={paths} />\r\n        <Paper sx={{ p: 5, mt: 2 }} elevation={2}>\r\n          <Typography mt={0.5} mb={1} variant=\"h4\" textAlign=\"left\">\r\n            {\"Change Password\"}\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid sm={4} xs={0}></Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <FormTextField\r\n                type=\"password\"\r\n                label={\"Current Password\"}\r\n                placeholder={\"Enter Password\"}\r\n                CustomErrorLine=\"Please enter a proper password\"\r\n                Value={currentPassword.value}\r\n                onChangeText={handleChngOldPassword}\r\n                Required\r\n              />\r\n            </Grid>\r\n            <Grid sm={4} xs={0}></Grid>\r\n\r\n            <Grid sm={4} xs={0}></Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <FormTextField\r\n                type=\"password\"\r\n                label={\"New Password\"}\r\n                placeholder={\"Enter New Password\"}\r\n                CustomErrorLine=\"Please enter a proper password\"\r\n                Value={password.value}\r\n                onChangeText={handleChangePassword}\r\n                Required\r\n              />\r\n            </Grid>\r\n            <Grid sm={4} xs={0}></Grid>\r\n\r\n            <Grid sm={4} xs={0}></Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <FormTextField\r\n                type=\"password\"\r\n                label={\"Confirm Password\"}\r\n                placeholder={\"Re Enter New Password\"}\r\n                CustomErrorLine=\"Please enter a proper password\"\r\n                Value={confirmPassword.value}\r\n                onChangeText={handleChngConfirmPassword}\r\n                Required\r\n                confirmErr={confirmErr}\r\n              />\r\n            </Grid>\r\n            <Grid sm={4} xs={0} />\r\n\r\n            <Grid sm={4} xs={0}></Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                sx={{ backgroundColor: colors.greenAccent[500] }}\r\n                onClick={handleClickSubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n            <Grid sm={4} xs={0} />\r\n          </Grid>\r\n        </Paper>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import { axios } from \"../../../../api/setup.interseptor\";\r\n\r\n\r\nexport const changePasswordRequest = (body) => {\r\n  return axios({\r\n    method: \"POST\",\r\n    url: \"/change-password\",\r\n    data: body,\r\n  });\r\n};","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n      slots = {},\n      slotProps = {}\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, otherProps, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, _extends({\n        as: slots.CollapsedIcon,\n        ownerState: ownerState\n      }, slotProps.collapsedIcon))\n    }))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      slots = {},\n      slotProps = {},\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;"],"names":["props","pathList","StyledBreadcrumb","styled","Chip","_ref","theme","backgroundColor","palette","mode","grey","height","spacing","color","fontWeight","typography","fontWeightRegular","emphasize","boxShadow","shadows","_jsx","role","children","Breadcrumbs","length","map","item","index","label","name","icon","Link","to","pathname","concat","path","Alert","React","ref","MuiAlert","elevation","variant","paths","TbHome2","MdOutlineSyncLock","ChangePassword","navigate","useNavigate","useTheme","colors","tokens","snackbarOpen","setSnackbarOpen","useState","open","vertical","horizontal","barVariant","setBarVariant","currentPassword","setCurrentPassword","value","error","success","password","setPassword","confirmPassword","seConfirmPassword","confirmErr","setConfirmErr","isLoader","setIsLoader","message","setMessage","handleClose","event","reason","useEffect","_jsxs","_Fragment","Loader","Snackbar","anchorOrigin","autoHideDuration","onClose","severity","sx","width","Box","mt","ml","mr","mb","Breadcrumb","Paper","p","Typography","textAlign","Grid","container","sm","xs","FormTextField","type","placeholder","CustomErrorLine","Value","onChangeText","Required","md","Button","size","greenAccent","onClick","handleClickSubmit","data","password_confirmation","current_password","body","axios","method","url","then","res","setTimeout","catch","err","createSvgIcon","d","_excluded","BreadcrumbCollapsedButton","ButtonBase","_extends","display","marginLeft","marginRight","borderRadius","BreadcrumbCollapsedIcon","MoreHorizIcon","slots","slotProps","otherProps","_objectWithoutPropertiesLoose","ownerState","focusRipple","as","CollapsedIcon","collapsedIcon","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","BreadcrumbsRoot","overridesResolver","styles","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","current","push","inProps","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","expanded","setExpanded","classes","composeClasses","useUtilityClasses","collapsedIconSlotProps","useSlotProps","elementType","externalSlotProps","listRef","allItems","toArray","filter","child","clsx","slice","BreadcrumbCollapsed","handleClickExpand","focusable","querySelector","focus","renderItemsBeforeAndAfter"],"sourceRoot":""}