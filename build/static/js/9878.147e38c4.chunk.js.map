{"version":3,"file":"static/js/9878.147e38c4.chunk.js","mappings":"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","sources":["components/breadcrumb/BreadCrumb.jsx","components/chip/StatusChip.jsx","components/footer/footerString.js","components/footer/Footer.jsx","components/tables/DefaultTable.jsx","components/tableCell/DateCell.jsx","components/tableCell/AmountCell.jsx","pages/app/wallet/comonent/WalletContainer.jsx","pages/app/wallet/service/wallet.request.js","translation/index.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport { emphasize, styled } from \"@mui/material/styles\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nconst Breadcrumb = (props) => {\r\n  const { pathList } = props;\r\n\r\n  const StyledBreadcrumb = styled(Chip)(({ theme }) => {\r\n    const backgroundColor =\r\n      theme.palette.mode === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[800];\r\n    return {\r\n      backgroundColor,\r\n      height: theme.spacing(3),\r\n      color: theme.palette.mode === \"light\" ? \"#141414\" : \"#f3f6f4\",\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      \"&:hover, &:focus\": {\r\n        backgroundColor: emphasize(backgroundColor, 0.06),\r\n      },\r\n      \"&:active\": {\r\n        boxShadow: theme.shadows[1],\r\n        backgroundColor: emphasize(backgroundColor, 0.12),\r\n      },\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div role=\"presentation\">\r\n      <Breadcrumbs aria-label=\"breadcrumb\">\r\n        {pathList.length &&\r\n          pathList.map((item, index) => {\r\n            if (index === pathList.length - 1) {\r\n              return (\r\n                <StyledBreadcrumb\r\n                  label={item.name}\r\n                  key={index}\r\n                  icon={item.icon}\r\n                />\r\n              );\r\n            } else {\r\n              return (\r\n                <Link\r\n                  to={{\r\n                    pathname: `/${item.path}`,\r\n                  }}\r\n                  key={index}\r\n                >\r\n                  <StyledBreadcrumb icon={item.icon} label={item.name} />\r\n                </Link>\r\n              );\r\n            }\r\n          })}\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from \"react\";\r\nimport { Box, Chip, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../../assets/color/theme\";\r\n\r\nconst StatusChip = (props) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  return (\r\n    <Box sx={{ width: 100 }}>\r\n      <Chip\r\n        sx={{\r\n          height: \"auto\",\r\n          \"& .MuiChip-label\": {\r\n            display: \"block\",\r\n            whiteSpace: \"nowrap\",\r\n          },\r\n          backgroundColor:\r\n            props.value === 1 ? colors.greenAccent[600] : colors.redAccent[600],\r\n          color: \"black\",\r\n        }}\r\n        label={props.value === 1 ? \"Live\" : \"Pause\"}\r\n        variant=\"filled\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StatusChip;\r\n","import strings from \"../../translation/index\";\r\n\r\nexport const FOOTER_WEBSITE_RIGHTS = strings[\"FOOTER.WEBSITE.RIGHTS\"];\r\nexport const FOOTER_WEBSITE_LABEL = strings[\"FOOTER.WEBSITE.LABEL\"];\r\n","import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport Link from '@mui/material/Link';\r\nimport { FOOTER_WEBSITE_LABEL, FOOTER_WEBSITE_RIGHTS } from './footerString';\r\n\r\nconst Copyright = (props) => {\r\n    return (\r\n        <Typography mt={1} variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {FOOTER_WEBSITE_RIGHTS}\r\n            <Link className=\"Url_link\" color=\"inherit\" href=\"http://www.textricks.com/\">\r\n                {FOOTER_WEBSITE_LABEL}\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default Copyright;\r\n\r\n","import React from \"react\";\r\nimport { MaterialReactTable } from \"material-react-table\";\r\nimport { Box, IconButton, Tooltip, useTheme } from \"@mui/material\";\r\nimport { Edit } from \"@mui/icons-material\";\r\nimport { alpha, styled } from \"@mui/material/styles\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport { tokens } from \"../../assets/color/theme\";\r\nimport \"./styles.css\";\r\nimport {\r\n  MdAssignmentInd,\r\n  MdDeleteForever,\r\n  MdOutlineSettingsBackupRestore,\r\n  MdPhoneCallback,\r\n  MdPhonePaused,\r\n  MdRemoveRedEye,\r\n} from \"react-icons/md\";\r\n\r\nconst DefaultTable = (props) => {\r\n  const {\r\n    data,\r\n    column,\r\n    handleEditAction,\r\n    handleDeleteAction,\r\n    handleStatusAction,\r\n    handlePlayPause,\r\n    handleAssignChangable,\r\n    handleViewChange,\r\n    isEditable = false,\r\n    isDeletable = false,\r\n    isStatusChangable = false,\r\n    isPlayPause = false,\r\n    isAssignable = false,\r\n    isView = false,\r\n  } = props;\r\n\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  const StatusSwitch = styled(Switch)(({ theme }) => ({\r\n    \"& .MuiSwitch-switchBase.Mui-checked\": {\r\n      color: colors.switchColor[100],\r\n      \"&:hover\": {\r\n        backgroundColor: alpha(\r\n          colors.switchColor[100],\r\n          theme.palette.action.hoverOpacity\r\n        ),\r\n      },\r\n    },\r\n    \"& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track\": {\r\n      backgroundColor: colors.switchColor[100],\r\n    },\r\n  }));\r\n\r\n  const handleChangeStatus = (ele) => {\r\n    handleStatusAction(ele);\r\n  };\r\n  const handleChangeEdit = (ele) => {\r\n    handleEditAction(ele);\r\n  };\r\n  const handleChangeDelete = (ele) => {\r\n    handleDeleteAction(ele);\r\n  };\r\n\r\n  const handleChangePlayPause = (ele) => {\r\n    handlePlayPause(ele);\r\n  };\r\n\r\n  const handleChangeAssign = (ele) => {\r\n    handleAssignChangable(ele);\r\n  };\r\n\r\n  const handleChangeView = (ele) => {\r\n    handleViewChange(ele);\r\n  };\r\n\r\n  return (\r\n    <MaterialReactTable\r\n      layoutMode=\"grid\"\r\n      enableBottomToolbar={false}\r\n      displayColumnDefOptions={{\r\n        \"mrt-row-actions\": {\r\n          muiTableHeadCellProps: {\r\n            align: \"center\",\r\n          },\r\n        },\r\n      }}\r\n      initialState={{ density: \"compact\", showGlobalFilter: true }}\r\n      positionGlobalFilter=\"left\"\r\n      muiSearchTextFieldProps={{\r\n        placeholder: `Search...`,\r\n        sx: { minWidth: \"50px\" },\r\n        variant: \"standard\",\r\n      }}\r\n      enableEditing\r\n      enableColumnFilters={false}\r\n      enableColumnActions={false}\r\n      enableFullScreenToggle={false}\r\n      enableStickyHeader={true}\r\n      enableGlobalFilterModes\r\n      enableDensityToggle={false}\r\n      enableToolbarInternalActions={false}\r\n      enableFilterMatchHighlighting={true}\r\n      enableColumnFilterModes={false}\r\n      columns={column}\r\n      data={data}\r\n      enableColumnOrdering\r\n      positionActionsColumn=\"last\"\r\n      renderRowActions={({ row }) => (\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            gap: \"0.2rem\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isStatusChangable && (\r\n            <Tooltip arrow placement=\"left\" title=\"Status\">\r\n              <IconButton\r\n                disableRipple\r\n                disableFocusRipple\r\n                disableTouchRipple\r\n                size=\"small\"\r\n              >\r\n                <StatusSwitch\r\n                  checked={row.original.status === 1 ? true : false}\r\n                  size=\"small\"\r\n                  onChange={() => handleChangeStatus(row.original)}\r\n                />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          {isPlayPause && (\r\n            <Tooltip\r\n              arrow\r\n              placement=\"right\"\r\n              title={row.original.status === 1 ? \"Pause\" : \"Play\"}\r\n            >\r\n              <IconButton onClick={() => handleChangePlayPause(row.original)}>\r\n                {row.original.status === 1 ? (\r\n                  <MdPhonePaused color={colors.grey[200]} />\r\n                ) : (\r\n                  <MdPhoneCallback color={colors.grey[200]} />\r\n                )}\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          {isEditable && (\r\n            <Tooltip arrow placement=\"left\" title=\"Edit\">\r\n              <IconButton onClick={() => handleChangeEdit(row.original)}>\r\n                <Edit />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          {isDeletable && (\r\n            <Tooltip\r\n              arrow\r\n              placement=\"right\"\r\n              title={row.original.deleted_at === null ? \"Delete\" : \"Restore\"}\r\n            >\r\n              <IconButton onClick={() => handleChangeDelete(row.original)}>\r\n                {row.original.deleted_at === null ? (\r\n                  <MdDeleteForever color={colors.redAccent[500]} />\r\n                ) : (\r\n                  <MdOutlineSettingsBackupRestore color={colors.blue[100]} />\r\n                )}\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n\r\n          {isAssignable && (\r\n            <Tooltip arrow placement=\"right\" title={\"Assign to\"}>\r\n              <IconButton onClick={() => handleChangeAssign(row.original)}>\r\n                <MdAssignmentInd />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          {isView && (\r\n            <Tooltip arrow placement=\"left\" title=\"Edit\">\r\n              <IconButton onClick={() => handleChangeView(row.original)}>\r\n                <MdRemoveRedEye />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n        </Box>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DefaultTable;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst DateCell = ({ value }) => {\r\n  const date = moment(value).format(\"DD MMM YYYY, h:mm a\");\r\n\r\n  return (\r\n    <div>{date}</div>\r\n  );\r\n};\r\n\r\nexport default DateCell;\r\n","import { Stack, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst AmountCell = ({ value }) => {\r\n  const parseCurrency = (input) =>\r\n    input\r\n      .match(/([a-zA-Z]+)(\\d+)/)\r\n      ?.slice(1)\r\n      .map((str, i) => (i === 0 ? str.toUpperCase() : parseInt(str, 10)));\r\n\r\n  const amount_curr = parseCurrency(value);\r\n\r\n  console.log(amount_curr);\r\n\r\n  return (\r\n    <div>\r\n      <Stack direction=\"row\" spacing={1}>\r\n        <Typography variant=\"subtitle2\">{amount_curr[0]}</Typography>\r\n        <Typography variant=\"subtitle2\">{amount_curr[1]}</Typography>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AmountCell;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Pagination } from \"rsuite\";\r\nimport { Box, Typography, useTheme } from \"@mui/material\";\r\nimport { TbHome2 } from \"react-icons/tb\";\r\nimport Breadcrumb from \"../../../../components/breadcrumb/BreadCrumb\";\r\nimport StatusChip from \"../../../../components/chip/StatusChip\";\r\nimport { tokens } from \"../../../../assets/color/theme\";\r\nimport Loader from \"../../../../components/Loader/Loader\";\r\nimport DefaultTable from \"../../../../components/tables/DefaultTable\";\r\nimport Copyright from \"../../../../components/footer/Footer\";\r\nimport { RiFolderHistoryFill } from \"react-icons/ri\";\r\nimport { getWalletHistory } from \"../service/wallet.request\";\r\nimport CustomCell from \"../../../../components/tableCell/DateCell\";\r\nimport DateCell from \"../../../../components/tableCell/DateCell\";\r\nimport AmountCell from \"../../../../components/tableCell/AmountCell\";\r\n\r\nconst paths = [\r\n  {\r\n    name: \"Dashboard\",\r\n    path: \"\",\r\n    icon: <TbHome2 />,\r\n  },\r\n  {\r\n    name: \"Wallet\",\r\n    icon: <RiFolderHistoryFill />,\r\n  },\r\n];\r\n\r\nconst WalletContainer = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [rows, setRows] = useState([]);\r\n  const [isLoader, setLoader] = useState(false);\r\n  const [total, setTotal] = useState(0);\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: \"transaction_id\",\r\n        header: \"Transaction ID\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: true,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        size: 50,\r\n      },\r\n      {\r\n        accessorKey: \"order_id\",\r\n        header: \"Order ID\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: true,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        size: 50,\r\n      },\r\n      {\r\n        accessorKey: \"created_at\",\r\n        header: \"Date\",\r\n        Cell: ({ cell }) => <DateCell value={cell.getValue()} />,\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: true,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        muiTableHeadCellProps: {\r\n          align: \"center\",\r\n        },\r\n        muiTableBodyCellProps: {\r\n          align: \"center\",\r\n        },\r\n        size: 30,\r\n      },\r\n      {\r\n        accessorKey: \"amount\",\r\n        header: \"Amount\",\r\n        Cell: ({ cell }) => <AmountCell value={cell.getValue()} />,\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: true,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n        size: 30,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const getAllHistory = (activePage, limit) => {\r\n    setLoader(true);\r\n    getWalletHistory(activePage, limit)\r\n      .then((res) => {\r\n        let getData = res.data.data.length === 0 ? [] : res.data.data.data;\r\n        const fetchData = getData?.map((ele) => {\r\n          return {\r\n            ...ele,\r\n            amount: ele.payment_currency + ele.payment_price,\r\n          };\r\n        });\r\n        setTotal(res.data.data.length === 0 ? 0 : res.data.data?.total);\r\n        setRows(getData.length > 0 ? fetchData : []);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllHistory(activePage, limit);\r\n  }, [activePage, limit]);\r\n\r\n  const handleViewHistory = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoader && <Loader />}\r\n\r\n      <Box\r\n        sx={{\r\n          \"& .rs-pagination-group\": {\r\n            color: colors.layoutColor[200],\r\n          },\r\n          \"& .MuiTypography-root\": {\r\n            color: colors.layoutColor[200],\r\n          },\r\n          mt: 1,\r\n          ml: 2,\r\n          mr: 2,\r\n          mb: 2,\r\n          height: \"80%\",\r\n          backgroundColor: \"inherit\",\r\n        }}\r\n      >\r\n        <Breadcrumb pathList={paths} />\r\n        <Box>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              mb: 1,\r\n            }}\r\n          >\r\n            <Typography variant=\"h5\">{\"Wallet History\"}</Typography>\r\n          </Box>\r\n          <Box>\r\n            <DefaultTable\r\n              isLoading={isLoader}\r\n              data={rows}\r\n              column={columns}\r\n              isSearchable={true}\r\n              handleViewChange={handleViewHistory}\r\n              isView={true}\r\n            />\r\n            <Pagination\r\n              style={{\r\n                marginTop: 5,\r\n              }}\r\n              layout={[\"total\", \"-\", \"pager\", \"skip\"]}\r\n              size={\"xs\"}\r\n              prev={true}\r\n              next={true}\r\n              first={true}\r\n              last={true}\r\n              ellipsis={true}\r\n              boundaryLinks={true}\r\n              total={total}\r\n              limit={limit}\r\n              maxButtons={5}\r\n              activePage={activePage}\r\n              onChangePage={setActivePage}\r\n              limitOptions={[5, 10, 25, 50, 100]}\r\n              onChangeLimit={setLimit}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Copyright />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WalletContainer;\r\n","import { axios } from \"../../../../api/setup.interseptor\";\r\n\r\nexport const getWalletHistory = (page, perpage) => {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/payment/get-wallet-list?page=${page}&perpage=${perpage}`,\r\n  });\r\n};\r\n\r\nexport const createPaymentWallet = (body) => {\r\n  return axios({\r\n    method: \"POST\",\r\n    url: \"/payment/add-to-wallet\",\r\n    data: body,\r\n  });\r\n};\r\n","import en from \"./en.json\";\nimport LocalizedStrings from \"react-localization\";\n\nexport let localLang = JSON.parse(localStorage.getItem(\"lang\"))\n  ? JSON.parse(localStorage.getItem(\"lang\"))\n  : \"en\";\n\nlet strings;\n\nif (!strings) {\n  strings = new LocalizedStrings({\n    en,\n  });\n}\n\nstrings.setLanguage(localLang);\n\nexport default strings;\n"],"names":["props","pathList","StyledBreadcrumb","styled","Chip","_ref","theme","backgroundColor","palette","mode","grey","height","spacing","color","fontWeight","typography","fontWeightRegular","emphasize","boxShadow","shadows","_jsx","role","children","Breadcrumbs","length","map","item","index","label","name","icon","Link","to","pathname","concat","path","useTheme","colors","tokens","Box","sx","width","display","whiteSpace","value","greenAccent","redAccent","variant","FOOTER_WEBSITE_RIGHTS","strings","FOOTER_WEBSITE_LABEL","_jsxs","Typography","mt","align","className","href","Date","getFullYear","data","column","handleEditAction","handleDeleteAction","handleStatusAction","handlePlayPause","handleAssignChangable","handleViewChange","isEditable","isDeletable","isStatusChangable","isPlayPause","isAssignable","isView","StatusSwitch","Switch","switchColor","alpha","action","hoverOpacity","MaterialReactTable","layoutMode","enableBottomToolbar","displayColumnDefOptions","muiTableHeadCellProps","initialState","density","showGlobalFilter","positionGlobalFilter","muiSearchTextFieldProps","placeholder","minWidth","enableEditing","enableColumnFilters","enableColumnActions","enableFullScreenToggle","enableStickyHeader","enableGlobalFilterModes","enableDensityToggle","enableToolbarInternalActions","enableFilterMatchHighlighting","enableColumnFilterModes","columns","enableColumnOrdering","positionActionsColumn","renderRowActions","_ref2","row","gap","justifyContent","alignItems","Tooltip","arrow","placement","title","IconButton","disableRipple","disableFocusRipple","disableTouchRipple","size","checked","original","status","onChange","handleChangeStatus","ele","onClick","handleChangePlayPause","MdPhonePaused","MdPhoneCallback","handleChangeEdit","Edit","deleted_at","handleChangeDelete","MdDeleteForever","MdOutlineSettingsBackupRestore","blue","handleChangeAssign","MdAssignmentInd","handleChangeView","MdRemoveRedEye","date","moment","format","amount_curr","input","_input$match","match","slice","str","i","toUpperCase","parseInt","parseCurrency","console","log","Stack","direction","paths","TbHome2","RiFolderHistoryFill","WalletContainer","rows","setRows","useState","isLoader","setLoader","total","setTotal","activePage","setActivePage","limit","setLimit","useMemo","accessorKey","header","enableColumnDragging","enableGlobalFilter","enableColumnFilter","muiTableBodyCellProps","Cell","cell","DateCell","getValue","AmountCell","useEffect","getAllHistory","getWalletHistory","then","res","_res$data$data","getData","fetchData","amount","payment_currency","payment_price","catch","err","_Fragment","Loader","layoutColor","ml","mr","mb","Breadcrumb","DefaultTable","isLoading","isSearchable","e","Pagination","style","marginTop","layout","prev","next","first","last","ellipsis","boundaryLinks","maxButtons","onChangePage","limitOptions","onChangeLimit","Copyright","page","perpage","axios","method","url","createPaymentWallet","body","localLang","JSON","parse","localStorage","getItem","LocalizedStrings","en","setLanguage"],"sourceRoot":""}