{"version":3,"file":"static/js/2688.a026ac2f.chunk.js","mappings":"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","sources":["pages/auth/verify/component/verifyOtp.jsx","pages/auth/verify/service/otp.request.js","../node_modules/@mui/material/FormHelperText/formHelperTextClasses.js","../node_modules/@mui/material/FormHelperText/FormHelperText.js","../node_modules/@mui/material/TextField/textFieldClasses.js","../node_modules/@mui/material/TextField/TextField.js"],"sourcesContent":["import React from \"react\";\r\nimport Loader from \"../../../../components/Loader/Loader\";\r\nimport { useState } from \"react\";\r\nimport { createTheme, ThemeProvider, useTheme } from \"@mui/material/styles\";\r\nimport { tokens } from \"../../../../assets/color/theme\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport \"./styles.css\";\r\nimport { Avatar, Button, IconButton, Typography } from \"@mui/material\";\r\nimport { MdOutlineLock } from \"react-icons/md\";\r\nimport { MuiOtpInput } from \"mui-one-time-password-input\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { sendOtpRequest, verifyOtpRequest } from \"../service/otp.request\";\r\n\r\nconst defaultTheme = createTheme();\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst VerifyOtp = (props) => {\r\n  // const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n  const theme = useTheme();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const colors = tokens(theme.palette.mode);\r\n  const userData = location.state?.login_id;\r\n  const [value, setValue] = useState(\"\");\r\n  const [snackbarOpen, setSnackbarOpen] = useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"right\",\r\n  });\r\n  const [barVariant, setBarVariant] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const { vertical, horizontal, open } = snackbarOpen;\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackbarOpen({ ...snackbarOpen, open: false });\r\n  };\r\n  const matchIsNumeric = (text) => {\r\n    const textTest = /[a-zA-Z]/gm;\r\n    const isNumber = typeof text === \"number\";\r\n    const isString = !textTest.test(String(text).toLowerCase());\r\n    return (isNumber || (isString && text !== \"\")) && !isNaN(Number(text));\r\n  };\r\n  const validateChar = (value, index) => {\r\n    return matchIsNumeric(value);\r\n  };\r\n  const handleChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let sendData = {\r\n      email: userData,\r\n      otp: value,\r\n    };\r\n    setLoader(true);\r\n    verifyOtpRequest(sendData)\r\n      .then((res) => {\r\n        setLoader(false);\r\n        setMessage(res.data.message);\r\n        setBarVariant(\"success\");\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        localStorage.clear();\r\n        setTimeout(() => {\r\n          navigate(\"/\");\r\n        }, 500);\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n        setMessage(err.message);\r\n        setBarVariant(\"error\");\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setValue(\"\");\r\n      });\r\n  };\r\n  const handleResend = () => {\r\n    let reqData = {\r\n      email: userData,\r\n    };\r\n    setLoader(true);\r\n    sendOtpRequest(reqData)\r\n      .then((res) => {\r\n        setMessage(res.data.message);\r\n        setBarVariant(\"success\");\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n        setMessage(err.message);\r\n        setBarVariant(\"error\");\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setValue(\"\");\r\n      });\r\n  };\r\n\r\n  let isDisable = value === \"\" || value.length < 6;\r\n\r\n  return (\r\n    <>\r\n      {loader && <Loader />}\r\n      <Snackbar\r\n        open={open}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        autoHideDuration={2000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert\r\n          onClose={handleClose}\r\n          severity={barVariant}\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\r\n          <CssBaseline />\r\n          <Grid\r\n            className=\"verify_left_grid\"\r\n            item\r\n            xs={false}\r\n            sm={6}\r\n            md={6}\r\n            sx={{\r\n              backgroundColor: colors.primary[500],\r\n            }}\r\n          />\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={6}\r\n            component={Paper}\r\n            elevation={5}\r\n            square\r\n            sx={{\r\n              boxShadow: \"none\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"10px\",\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            <Box\r\n              component=\"form\"\r\n              sx={{\r\n                padding: 3,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                boxShadow: \"none !important\",\r\n              }}\r\n            >\r\n              <Avatar sx={{ bgcolor: \"secondary.main\" }}>\r\n                <MdOutlineLock />\r\n              </Avatar>\r\n              <Typography variant=\"h6\" mb={2} mt={2}>\r\n                {\"Verify with OTP\"}\r\n              </Typography>\r\n              <Typography variant=\"body2\" gutterBottom align=\"center\" mb={2}>\r\n                {\r\n                  \"To ensure your security, please enter the One-Time Password (OTP) sent to your register email below.\"\r\n                }\r\n              </Typography>\r\n              <Box noValidate sx={{ mt: 1 }}>\r\n                <MuiOtpInput\r\n                  mt={2}\r\n                  length={6}\r\n                  TextFieldsProps={{ placeholder: \"-\" }}\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  validateChar={validateChar}\r\n                />\r\n              </Box>\r\n              <Typography\r\n                component=\"h6\"\r\n                variant=\"body2\"\r\n                gutterBottom\r\n                align=\"center\"\r\n                mt={3}\r\n                mb={3}\r\n              >\r\n                {\"Didn't recieve the OTP?\"}\r\n                <strong style={{ cursor: \"pointer\" }} onClick={handleResend}>\r\n                  {\" \"}\r\n                  Resend\r\n                </strong>\r\n              </Typography>\r\n              <Box sx={{ mt: 1, display: \"flex\" }}>\r\n                <IconButton onClick={(e) => handleSubmit(e)}>\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    disabled={isDisable}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </IconButton>\r\n                <IconButton onClick={() => navigate(\"/\")}>\r\n                  <Button size=\"large\" variant=\"outlined\">\r\n                    Cancel\r\n                  </Button>\r\n                </IconButton>\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VerifyOtp;\r\n","import { axios } from \"../../../../api/setup.interseptor\";\r\n\r\nexport const verifyOtpRequest = (body) => {\r\n  return axios({\r\n    method: \"POST\",\r\n    url: \"/verified\",\r\n    data: body,\r\n  });\r\n};\r\n\r\nexport const sendOtpRequest = (body) => {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/resend-otp?email=${body.email}`\r\n  });\r\n};\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormHelperTextUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormHelperText', slot);\n}\nconst formHelperTextClasses = generateUtilityClasses('MuiFormHelperText', ['root', 'error', 'disabled', 'sizeSmall', 'sizeMedium', 'contained', 'focused', 'filled', 'required']);\nexport default formHelperTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport formHelperTextClasses, { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\nconst FormHelperTextRoot = styled('p', {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size && styles[`size${capitalize(ownerState.size)}`], ownerState.contained && styles.contained, ownerState.filled && styles.filled];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, theme.typography.caption, {\n  textAlign: 'left',\n  marginTop: 3,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  [`&.${formHelperTextClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled\n  },\n  [`&.${formHelperTextClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}, ownerState.size === 'small' && {\n  marginTop: 4\n}, ownerState.contained && {\n  marginLeft: 14,\n  marginRight: 14\n}));\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n  const {\n      children,\n      className,\n      component = 'p'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  const ownerState = _extends({}, props, {\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children === ' ' ? // notranslate needed while Google Translate will not fix zero-width space issue\n    _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n      className: \"notranslate\",\n      children: \"\\u200B\"\n    })) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default FormHelperText;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/material-ui/api/form-control/)\n * - [InputLabel](/material-ui/api/input-label/)\n * - [FilledInput](/material-ui/api/filled-input/)\n * - [OutlinedInput](/material-ui/api/outlined-input/)\n * - [Input](/material-ui/api/input/)\n * - [FormHelperText](/material-ui/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n  const {\n      autoComplete,\n      autoFocus = false,\n      children,\n      className,\n      color = 'primary',\n      defaultValue,\n      disabled = false,\n      error = false,\n      FormHelperTextProps,\n      fullWidth = false,\n      helperText,\n      id: idOverride,\n      InputLabelProps,\n      inputProps,\n      InputProps,\n      inputRef,\n      label,\n      maxRows,\n      minRows,\n      multiline = false,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      required = false,\n      rows,\n      select = false,\n      SelectProps,\n      type,\n      value,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n  const InputMore = {};\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n    InputMore.label = label;\n  }\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n    InputMore['aria-describedby'] = undefined;\n  }\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n  /**\n   * Props applied to the [`Select`](/material-ui/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;"],"names":["defaultTheme","createTheme","Alert","React","props","ref","_jsx","MuiAlert","elevation","variant","_location$state","theme","useTheme","location","useLocation","navigate","useNavigate","colors","tokens","palette","mode","userData","state","login_id","value","setValue","useState","snackbarOpen","setSnackbarOpen","open","vertical","horizontal","barVariant","setBarVariant","loader","setLoader","message","setMessage","handleClose","event","reason","handleSubmit","e","preventDefault","sendData","email","otp","body","axios","method","url","data","then","res","localStorage","clear","setTimeout","catch","err","isDisable","length","_jsxs","_Fragment","children","Loader","Snackbar","anchorOrigin","autoHideDuration","onClose","severity","sx","width","ThemeProvider","Grid","container","component","height","CssBaseline","className","item","xs","sm","md","backgroundColor","primary","Paper","square","boxShadow","paddingLeft","paddingRight","margin","Box","padding","display","flexDirection","alignItems","Avatar","bgcolor","MdOutlineLock","Typography","mb","mt","gutterBottom","align","noValidate","MuiOtpInput","TextFieldsProps","placeholder","onChange","newValue","validateChar","index","text","isNumber","isString","test","String","toLowerCase","isNaN","Number","matchIsNumeric","style","cursor","onClick","handleResend","reqData","concat","IconButton","Button","size","type","disabled","getFormHelperTextUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_span","_excluded","FormHelperTextRoot","styled","name","overridesResolver","styles","ownerState","root","capitalize","contained","filled","_ref","_extends","color","vars","secondary","typography","caption","textAlign","marginTop","marginRight","marginBottom","marginLeft","formHelperTextClasses","error","main","inProps","useThemeProps","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","focused","required","classes","slots","composeClasses","useUtilityClasses","as","clsx","getTextFieldUtilityClass","variantComponent","standard","Input","FilledInput","outlined","OutlinedInput","TextFieldRoot","FormControl","autoComplete","autoFocus","defaultValue","FormHelperTextProps","fullWidth","helperText","id","idOverride","InputLabelProps","inputProps","InputProps","inputRef","label","maxRows","minRows","multiline","onBlur","onFocus","rows","select","SelectProps","InputMore","shrink","notched","native","undefined","useId","helperTextId","inputLabelId","InputComponent","InputElement","InputLabel","htmlFor","Select","labelId","input","FormHelperText"],"sourceRoot":""}