{"version":3,"file":"static/js/771.7e1b3193.chunk.js","mappings":"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","sources":["components/breadcrumb/BreadCrumb.jsx","components/button/CustomizedButtons.jsx","components/chip/StatusBadge.jsx","components/chip/VerifyBadge.jsx","components/dropdown/FormTextDropdown.jsx","components/form/companyForm/CompanyForm.jsx","components/modal/FormModal.jsx","components/tables/DefaultTable.jsx","pages/app/serverIp/service/serverIp.request.js","components/form/userForm/UserForm.jsx","pages/auth/users/component/users.jsx","pages/auth/users/service/users.request.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport { emphasize, styled } from \"@mui/material/styles\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nconst Breadcrumb = (props) => {\r\n  const { pathList } = props;\r\n\r\n  const StyledBreadcrumb = styled(Chip)(({ theme }) => {\r\n    const backgroundColor =\r\n      theme.palette.mode === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[800];\r\n    return {\r\n      backgroundColor,\r\n      height: theme.spacing(3),\r\n      color: theme.palette.mode === \"light\" ? \"#141414\" : \"#f3f6f4\",\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      \"&:hover, &:focus\": {\r\n        backgroundColor: emphasize(backgroundColor, 0.06),\r\n      },\r\n      \"&:active\": {\r\n        boxShadow: theme.shadows[1],\r\n        backgroundColor: emphasize(backgroundColor, 0.12),\r\n      },\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div role=\"presentation\">\r\n      <Breadcrumbs aria-label=\"breadcrumb\">\r\n        {pathList.length &&\r\n          pathList.map((item, index) => {\r\n            if (index === pathList.length - 1) {\r\n              return (\r\n                <StyledBreadcrumb\r\n                  label={item.name}\r\n                  key={index}\r\n                  icon={item.icon}\r\n                />\r\n              );\r\n            } else {\r\n              return (\r\n                <Link\r\n                  to={{\r\n                    pathname: `/${item.path}`,\r\n                  }}\r\n                  key={index}\r\n                >\r\n                  <StyledBreadcrumb icon={item.icon} label={item.name} />\r\n                </Link>\r\n              );\r\n            }\r\n          })}\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import * as React from \"react\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { tokens } from \"../../assets/color/theme\";\r\n\r\nconst CustomizedButtons = (props) => {\r\n  const { label, onClickBtn, type, isDisable } = props;\r\n\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  const SaveButton = styled(Button)({\r\n    boxShadow: \"none\",\r\n    textTransform: \"none\",\r\n    padding: \"10px\",\r\n    border: \"none\",\r\n    lineHeight: 1,\r\n    backgroundColor: colors.greenAccent[400],\r\n    color: colors.btn[200],\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:hover\": {\r\n      backgroundColor: colors.greenAccent[600],\r\n      border: \"none\",\r\n    },\r\n  });\r\n  const CancelButton = styled(Button)({\r\n    boxShadow: \"none\",\r\n    textTransform: \"none\",\r\n    padding: \"10px\",\r\n    border: \"none\",\r\n    lineHeight: 1,\r\n    backgroundColor: colors.btn[100],\r\n    color: colors.btn[200],\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:hover\": {\r\n      backgroundColor: colors.grey[100],\r\n      border: \"none\",\r\n    },\r\n  });\r\n\r\n  const handleClickBtn = (e) => {\r\n    e.preventDefault();\r\n    onClickBtn();\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2}>\r\n      {type === \"add\" ? (\r\n        <SaveButton\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"outlined\"\r\n          disabled={isDisable}\r\n          onClick={(e) => handleClickBtn(e)}\r\n        >\r\n          {label}\r\n        </SaveButton>\r\n      ) : (\r\n        <CancelButton size=\"large\" variant=\"outlined\" onClick={handleClickBtn}>\r\n          {label}\r\n        </CancelButton>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\nexport default CustomizedButtons;\r\n","import React from \"react\";\r\nimport { Box, Chip, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../../assets/color/theme\";\r\n\r\nconst StatusBadge = (props) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Chip\r\n        sx={{\r\n          height: \"auto\",\r\n          \"& .MuiChip-label\": {\r\n            display: \"block\",\r\n            whiteSpace: \"nowrap\",\r\n          },\r\n          backgroundColor:\r\n            props.value === 1 ? colors.greenAccent[600] : colors.redAccent[600],\r\n          color: \"black\",\r\n        }}\r\n        label={props.value === 1 ? \"Active\" : \"Inactive\"}\r\n        variant=\"filled\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StatusBadge;\r\n","import React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport { GoVerified, GoUnverified } from \"react-icons/go\";\r\n\r\nconst VerifyBadge = (props) => {\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      {props.value === 1 ? (\r\n        <GoVerified size=\"15\" color=\"blue\" />\r\n      ) : (\r\n        <GoUnverified size=\"15\" color=\"red\" />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VerifyBadge;\r\n","import React, { useState } from \"react\";\r\nimport { Box, Chip, useTheme } from \"@mui/material\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\n\r\nconst FormTextDropdown = (props) => {\r\n  const {\r\n    Options,\r\n    Value,\r\n    label,\r\n    CustomErrorLine,\r\n    multiSelect,\r\n    Required,\r\n    disable,\r\n    defaultValue,\r\n    onSelect,\r\n    ...rest\r\n  } = props;\r\n\r\n  const theme = useTheme();\r\n\r\n  const [selectValue, setSelectValue] = useState({\r\n    value: \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n\r\n  const [multSelectValue, setMultiSelectValue] = useState({\r\n    value: defaultValue ? defaultValue : [],\r\n    error: false,\r\n    success: false,\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSelect = (event) => {\r\n    const value = {\r\n      value: event.target.value,\r\n      error: false,\r\n      success: true,\r\n    };\r\n    setSelectValue(value);\r\n    onSelect(value);\r\n    if (event.target.value) {\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeBlur = () => {\r\n    if (Required) {\r\n      if (selectValue.value) {\r\n        setError(\"\");\r\n        const value = {\r\n          value: selectValue.value,\r\n          error: false,\r\n          success: true,\r\n        };\r\n        setSelectValue(value);\r\n        onSelect(value);\r\n      } else {\r\n        const value = {\r\n          value: \"\",\r\n          error: true,\r\n          success: false,\r\n        };\r\n        setSelectValue(value);\r\n        onSelect(value);\r\n        setError(CustomErrorLine ? CustomErrorLine : \"Select One Option\");\r\n      }\r\n    } else {\r\n      setError(\"\");\r\n      const value = {\r\n        value: selectValue.value,\r\n        error: false,\r\n        success: true,\r\n      };\r\n      setSelectValue(value);\r\n      onSelect(value);\r\n    }\r\n  };\r\n\r\n  const handleChangeMultiSelect = (data) => {\r\n    if (Required) {\r\n      if (multSelectValue.value.length > 0) {\r\n        const value = {\r\n          value: data.target.value,\r\n          error: false,\r\n          success: true,\r\n        };\r\n        setMultiSelectValue(value);\r\n        onSelect(value);\r\n        setError(\"\");\r\n      } else {\r\n        const value = {\r\n          value: data.target.value,\r\n          error: false,\r\n          success: true,\r\n        };\r\n        setMultiSelectValue(value);\r\n        onSelect(value);\r\n        setError(CustomErrorLine ? CustomErrorLine : \"Select Atleast One\");\r\n      }\r\n    } else {\r\n      const value = {\r\n        value: data.target.value,\r\n        error: false,\r\n        success: true,\r\n      };\r\n      setMultiSelectValue(value);\r\n      onSelect(value);\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeMultiBlur = (data) => {\r\n    if (Required) {\r\n      if (multSelectValue.value.length > 0) {\r\n        setError(\"\");\r\n        const value = {\r\n          value: data.target.value,\r\n          error: false,\r\n          success: true,\r\n        };\r\n        setMultiSelectValue(value);\r\n        onSelect(value);\r\n      } else {\r\n        const value = {\r\n          value: [],\r\n          error: true,\r\n          success: false,\r\n        };\r\n        setError(CustomErrorLine ? CustomErrorLine : \"Select atleast one\");\r\n        setMultiSelectValue(value);\r\n        onSelect(value);\r\n      }\r\n    } else {\r\n      const value = {\r\n        value: [],\r\n        error: false,\r\n        success: true,\r\n      };\r\n      setError(\"\");\r\n      setMultiSelectValue(value);\r\n      onSelect(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl fullWidth size=\"small\" margin=\"normal\">\r\n      <InputLabel\r\n        id=\"demo-select-small-label\"\r\n        sx={{\r\n          color:\r\n            theme.palette.mode === \"dark\"\r\n              ? \"#FAF0E6 !important\"\r\n              : \"#352F44 !important\",\r\n        }}\r\n      >\r\n        {label}\r\n      </InputLabel>\r\n      {multiSelect === true ? (\r\n        <Select\r\n          error={error ? true : false}\r\n          labelId=\"demo-multiple-checkbox-label\"\r\n          id=\"demo-multiple-checkbox\"\r\n          required={Required}\r\n          fullWidth\r\n          multiple\r\n          value={multSelectValue.value}\r\n          onChange={handleChangeMultiSelect}\r\n          onBlur={handleChangeMultiBlur}\r\n          input={<OutlinedInput label={label} />}\r\n          renderValue={(selected) => (\r\n            <Box\r\n              sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}\r\n              key={selected}\r\n            >\r\n              {selected.map((item) => (\r\n                <Chip\r\n                  key={item}\r\n                  label={Options?.find((e) => e.id === item)?.label}\r\n                />\r\n              ))}\r\n            </Box>\r\n          )}\r\n        >\r\n          {Options?.map((item) => (\r\n            <MenuItem key={item.id} value={item.id}>\r\n              <Checkbox checked={multSelectValue.value.includes(item.id)} />\r\n              <ListItemText primary={item.label} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      ) : (\r\n        <Select\r\n          autoComplete={true}          \r\n          error={error ? true : false}\r\n          labelId=\"demo-simple-select-helper-label\"\r\n          value={Value ? Value : selectValue.value}\r\n          label={label}\r\n          onChange={handleSelect}\r\n          onBlur={handleChangeBlur}\r\n          disabled={disable}\r\n          required={Required}\r\n          size=\"small\"\r\n          sx={{\r\n            \"& .MuiFormLabel-root\": {\r\n              color:\r\n                theme.palette.mode === \"dark\"\r\n                  ? \"#FAF0E6 !important\"\r\n                  : \"#352F44 !important\",\r\n            },\r\n          }}\r\n\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>-Select-</em>\r\n          </MenuItem>\r\n          {Options &&\r\n            Options?.map((ele, index) => (\r\n              <MenuItem value={ele.value} key={index}>\r\n                {ele.label}\r\n              </MenuItem>\r\n            ))}\r\n        </Select>\r\n      )}\r\n\r\n      {error && (\r\n        // <FormHelperText sx={{ color: \"#FF0000\" }}>{error}</FormHelperText>\r\n        <FormHelperText sx={{ marginLeft: \"inherit\" }} error>{error}</FormHelperText>\r\n      )}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormTextDropdown;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  IconButton,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { tokens } from \"../../../assets/color/theme\";\r\nimport \"./styles.css\";\r\nimport FormTextField from \"../../textfield/FormTextField\";\r\nimport {\r\n  getAllCountryRequest,\r\n  getStateByCountry,\r\n} from \"../../../pages/auth/users/service/users.request\";\r\nimport FormTextDropdown from \"../../dropdown/FormTextDropdown\";\r\nimport Loader from \"../../Loader/Loader\";\r\n\r\nconst CompanyForm = ({\r\n  handleFormData,\r\n  onHandleClose,\r\n  errorMessage,\r\n  setErrorMessage,\r\n  clickedBtn,\r\n  initialValue,\r\n}) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [isLoader, setLoader] = useState(false);\r\n  const [companyName, setCompanyName] = useState({\r\n    value: clickedBtn === \"edit\" ? initialValue.company_name : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [fullName, setFullName] = useState({\r\n    value: \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [email, setEmail] = useState({\r\n    value: clickedBtn === \"edit\" ? initialValue.email : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [phone, setPhone] = useState({\r\n    value: clickedBtn === \"edit\" ? initialValue.mobile : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [address, setAddress] = useState({\r\n    value: clickedBtn === \"edit\" ? initialValue.billing_address : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [country, setCountry] = useState({\r\n    value: clickedBtn === \"edit\" ? initialValue.country_id : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [stateList, setStateList] = useState([]);\r\n  const [state, setState] = useState({\r\n    value: initialValue ? initialValue.state_id : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [city, setCity] = useState({\r\n    value: clickedBtn === \"edit\" ? initialValue.city : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [zipCode, setZipCode] = useState({\r\n    value: clickedBtn === \"edit\" ? initialValue.zip : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLoader(true);\r\n    getAllCountryRequest()\r\n      .then((res) => {\r\n        const filterCountry = res.data.data.map((ele) => {\r\n          return {\r\n            value: ele.id,\r\n            label: ele.country_name,\r\n            phone_code: ele.phone_code,\r\n          };\r\n        });\r\n        setCountryList(filterCountry);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (country.value !== \"\") {\r\n      getStateByCountry(country.value)\r\n        .then((res) => {\r\n          const filterState = res.data.data.map((ele) => {\r\n            return {\r\n              value: ele.id,\r\n              label: ele.state_name,\r\n            };\r\n          });\r\n          setStateList(filterState);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [country]);\r\n\r\n  const handleChangeCompanyName = (value) => {\r\n    setErrorMessage(\"\");\r\n    setCompanyName(value);\r\n  };\r\n  const handleChangeFullName = (val) => {\r\n    setErrorMessage(\"\");\r\n    setFullName(val);\r\n  };\r\n  const handleChangeEmail = (val) => {\r\n    setErrorMessage(\"\");\r\n    setEmail(val);\r\n  };\r\n  const handleChangePhone = (val) => {\r\n    setErrorMessage(\"\");\r\n    setPhone(val);\r\n  };\r\n  const handleChangeAddress = (val) => {\r\n    setErrorMessage(\"\");\r\n    setAddress(val);\r\n  };\r\n  const handleChangeCountry = (value) => {\r\n    setErrorMessage(\"\");\r\n    setCountry(value);\r\n  };\r\n  const handleChangeState = (value) => {\r\n    setErrorMessage(\"\");\r\n    setState(value);\r\n  };\r\n  const handleChangeCity = (value) => {\r\n    setErrorMessage(\"\");\r\n    setCity(value);\r\n  };\r\n  const handleChangeZip = (value) => {\r\n    setErrorMessage(\"\");\r\n    setZipCode(value);\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const value = {\r\n      company_name: companyName.value,\r\n      name: fullName.value,\r\n      email: email.value,\r\n      mobile: phone.value,\r\n      address: address.value,\r\n      country_id: country.value,\r\n      state_id: state.value,\r\n      city: city.value,\r\n      zip: parseInt(zipCode.value),\r\n    };\r\n    handleFormData(value);\r\n  };\r\n  return (\r\n    <>\r\n      {isLoader && <Loader />}\r\n      <Box component=\"form\" noValidate>\r\n        <Card\r\n          sx={{\r\n            boxShadow: \"none\",\r\n            backgroundColor: colors.form[500],\r\n            color: colors.form[100],\r\n          }}\r\n        >\r\n          <CardHeader\r\n            action={\r\n              <IconButton aria-label=\"settings\" onClick={onHandleClose}>\r\n                <MdClose color={colors.form[100]} />\r\n              </IconButton>\r\n            }\r\n            title={clickedBtn === \"add\" ? \"Create Company\" : \"Edit Company\"}\r\n          />\r\n          {errorMessage && <span className=\"error_msg\">{errorMessage}</span>}\r\n          <CardContent color={colors.form[100]}>\r\n            <Box className={\"formResponsiveHeight\"}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12} md={6}>\r\n                  <FormTextField\r\n                    type=\"textarea\"\r\n                    placeholder={\"Enter Company Name\"}\r\n                    label={\"Company Name\"}\r\n                    Value={companyName.value}\r\n                    onChangeText={handleChangeCompanyName}\r\n                    Required={true}\r\n                    CustomErrorLine={\"Enter proper name\"}\r\n                    isDisable={clickedBtn === \"edit\" && true}\r\n                  />\r\n                </Grid>\r\n                {clickedBtn === \"add\" && (\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormTextField\r\n                      type=\"text\"\r\n                      label={\"User Name\"}\r\n                      placeholder={\"Enter User Name\"}\r\n                      CustomErrorLine=\"Please enter a full name\"\r\n                      value={fullName.value}\r\n                      onChangeText={handleChangeFullName}\r\n                      Required\r\n                      isDisable={clickedBtn === \"edit\" && true}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormTextField\r\n                    type=\"email\"\r\n                    label={\"Email\"}\r\n                    placeholder={\"Enter Email\"}\r\n                    CustomErrorLine=\"Please enter a proper email\"\r\n                    value={email.value}\r\n                    onChangeText={handleChangeEmail}\r\n                    Required\r\n                    isDisable={clickedBtn === \"edit\" && true}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormTextField\r\n                    type=\"phoneno\"\r\n                    label={\"Phone No\"}\r\n                    placeholder={\"Enter Phone No.\"}\r\n                    CustomErrorLine=\"Please enter a phone no.\"\r\n                    value={phone.value}\r\n                    onChangeText={handleChangePhone}\r\n                    Required\r\n                    isDisable={clickedBtn === \"edit\" && true}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormTextField\r\n                    type=\"textarea\"\r\n                    label={\"Address\"}\r\n                    placeholder={\"Enter Address\"}\r\n                    CustomErrorLine=\"Please enter address\"\r\n                    value={address.value}\r\n                    onChangeText={handleChangeAddress}\r\n                    Required\r\n                    isMultiline\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormTextDropdown\r\n                    Value={country.value}\r\n                    onSelect={handleChangeCountry}\r\n                    label={\"Country *\"}\r\n                    placeholder={\"Enter Country Name\"}\r\n                    CustomErrorLine={\"Choose one\"}\r\n                    Required={true}\r\n                    Options={countryList}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormTextDropdown\r\n                    Value={state.value}\r\n                    onSelect={handleChangeState}\r\n                    label={\"State *\"}\r\n                    placeholder={\"Enter State Name\"}\r\n                    CustomErrorLine={\"Choose one\"}\r\n                    Required={true}\r\n                    Options={stateList}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <FormTextField\r\n                    type=\"text\"\r\n                    label={\"City\"}\r\n                    placeholder={\"Enter City Name\"}\r\n                    CustomErrorLine=\"Please enter a city name\"\r\n                    value={city.value}\r\n                    onChangeText={handleChangeCity}\r\n                    Required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={2}>\r\n                  <FormTextField\r\n                    type=\"num\"\r\n                    label={\"Zip\"}\r\n                    placeholder={\"Enter Zip Code\"}\r\n                    CustomErrorLine=\"Please enter a zip code\"\r\n                    value={zipCode.value}\r\n                    onChangeText={handleChangeZip}\r\n                    Required\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions sx={{ justifyContent: \"space-between\", mr: 1, ml: 1 }}>\r\n            <Button size=\"small\" variant=\"contained\" onClick={onHandleClose}>\r\n              {\"Cancel\"}\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              size=\"small\"\r\n              onClick={(e) => handleSubmitForm(e)}\r\n              sx={{ backgroundColor: colors.greenAccent[500] }}\r\n              variant=\"contained\"\r\n            >\r\n              {clickedBtn === \"add\" ? \"Save\" : \"Update\"}\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyForm;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  bgcolor: \"background.paper\",\r\n  border: \"none\",\r\n  boxShadow: 5,\r\n  p: 1,\r\n  borderRadius: \"10px\",\r\n  width: \"50%\",\r\n  \"@media (max-width: 991px)\": {\r\n    width: \"90%\",\r\n  },\r\n  scrollbars: {\r\n    width: \"2px\"\r\n  }\r\n};\r\n\r\nexport const FormModal = (props) => {\r\n  const { modal_width = \"50%\", isOpen, handleClose = () => {} } = props;\r\n\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"parent-modal-title\"\r\n      aria-describedby=\"parent-modal-description\"\r\n    >\r\n      <Box sx={{ ...style, width: modal_width }}>\r\n        <div>{props.children}</div>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { MaterialReactTable } from \"material-react-table\";\r\nimport { Box, IconButton, Tooltip, useTheme } from \"@mui/material\";\r\nimport { Edit } from \"@mui/icons-material\";\r\nimport { alpha, styled } from \"@mui/material/styles\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport { tokens } from \"../../assets/color/theme\";\r\nimport \"./styles.css\";\r\nimport {\r\n  MdDeleteForever,\r\n  MdMotionPhotosOn,\r\n  MdMotionPhotosPause,\r\n  MdOutlineSettingsBackupRestore,\r\n  MdPhoneCallback,\r\n  MdPhonePaused,\r\n} from \"react-icons/md\";\r\n\r\nconst DefaultTable = (props) => {\r\n  const {\r\n    data,\r\n    column,\r\n    handleEditAction,\r\n    handleDeleteAction,\r\n    handleStatusAction,\r\n    handlePlayPause,\r\n    isEditable,\r\n    isDeletable,\r\n    isStatusChangable,\r\n    isPlayPause,\r\n  } = props;\r\n\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  const StatusSwitch = styled(Switch)(({ theme }) => ({\r\n    \"& .MuiSwitch-switchBase.Mui-checked\": {\r\n      color: colors.switchColor[100],\r\n      \"&:hover\": {\r\n        backgroundColor: alpha(\r\n          colors.switchColor[100],\r\n          theme.palette.action.hoverOpacity\r\n        ),\r\n      },\r\n    },\r\n    \"& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track\": {\r\n      backgroundColor: colors.switchColor[100],\r\n    },\r\n  }));\r\n\r\n  const handleChangeStatus = (ele) => {\r\n    handleStatusAction(ele);\r\n  };\r\n  const handleChangeEdit = (ele) => {\r\n    handleEditAction(ele);\r\n  };\r\n  const handleChangeDelete = (ele) => {\r\n    handleDeleteAction(ele);\r\n  };\r\n\r\n  const handleChangePlayPause = (ele) => {\r\n    handlePlayPause(ele);\r\n  };\r\n\r\n  return (\r\n    <MaterialReactTable\r\n      layoutMode=\"grid\"\r\n      enableBottomToolbar={false}\r\n      displayColumnDefOptions={{\r\n        \"mrt-row-actions\": {\r\n          muiTableHeadCellProps: {\r\n            align: \"center\",\r\n          },\r\n        },\r\n      }}\r\n      initialState={{ density: \"compact\", showGlobalFilter: true }}\r\n      positionGlobalFilter=\"left\"\r\n      muiSearchTextFieldProps={{\r\n        placeholder: `Search...`,\r\n        sx: { minWidth: \"50px\" },\r\n        variant: \"standard\",\r\n      }}\r\n      enableEditing\r\n      enableColumnFilters={false}\r\n      enableColumnActions={false}\r\n      enableFullScreenToggle={false}\r\n      enableStickyHeader={true}\r\n      enableGlobalFilterModes\r\n      enableDensityToggle={false}\r\n      enableToolbarInternalActions={false}\r\n      enableFilterMatchHighlighting={true}\r\n      enableColumnFilterModes={false}\r\n      columns={column}\r\n      data={data}\r\n      enableColumnOrdering\r\n      positionActionsColumn=\"last\"\r\n      renderRowActions={({ row }) => (\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            gap: \"0.2rem\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {isStatusChangable && (\r\n            <Tooltip arrow placement=\"left\" title=\"Status\">\r\n              <IconButton\r\n                disableRipple\r\n                disableFocusRipple\r\n                disableTouchRipple\r\n                size=\"small\"\r\n              >\r\n                <StatusSwitch\r\n                  checked={row.original.status === 1 ? true : false}\r\n                  size=\"small\"\r\n                  onChange={() => handleChangeStatus(row.original)}\r\n                />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          {isPlayPause && (\r\n            <Tooltip\r\n              arrow\r\n              placement=\"right\"\r\n              title={row.original.status === 1 ? \"Pause\" : \"Play\"}\r\n            >\r\n              <IconButton onClick={() => handleChangePlayPause(row.original)}>\r\n                {row.original.status === 1 ? (\r\n                  <MdPhonePaused color={colors.grey[200]} />\r\n                ) : (\r\n                  <MdPhoneCallback color={colors.grey[200]} />\r\n                )}\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          {isEditable && (\r\n            <Tooltip arrow placement=\"left\" title=\"Edit\">\r\n              <IconButton onClick={() => handleChangeEdit(row.original)}>\r\n                <Edit />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          {isDeletable && (\r\n            <Tooltip\r\n              arrow\r\n              placement=\"right\"\r\n              title={row.original.deleted_at === null ? \"Delete\" : \"Restore\"}\r\n            >\r\n              <IconButton onClick={() => handleChangeDelete(row.original)}>\r\n                {row.original.deleted_at === null ? (\r\n                  <MdDeleteForever color={colors.redAccent[500]} />\r\n                ) : (\r\n                  <MdOutlineSettingsBackupRestore color={colors.blue[100]} />\r\n                )}\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n        </Box>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DefaultTable;\r\n","import { axios } from \"../../../../api/setup.interseptor\";\r\n\r\nexport const getAllIpRequest = (page, perpage) => {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/serverIP?page=${page}&perpage=${perpage}`,\r\n  });\r\n};\r\nexport const getActiveIpRequest = (page, perpage) => {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/serverIP/active`,\r\n  });\r\n};\r\nexport const createIpRequest = (body) => {\r\n  return axios({\r\n    method: \"POST\",\r\n    url: \"/serverIP\",\r\n    data: body,\r\n  });\r\n};\r\nexport const getIpByIdRequest = (id) => {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/serverIP/${id}`,\r\n  });\r\n};\r\nexport const updateIpRequest = (value) => {\r\n  return axios({\r\n    method: \"PUT\",\r\n    url: `/serverIP/${value.id}`,\r\n    data: value.data,\r\n  });\r\n};\r\nexport const updateIpStatusRequest = (body) => {\r\n  return axios({\r\n    method: \"PATCH\",\r\n    url: `/serverIP/changeStatus/${body.id}`,\r\n    data: { status: body.status },\r\n  });\r\n};\r\nexport const getAllCompanyRequest = () =>{\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/company`,\r\n  })\r\n}","import React, { useState } from \"react\";\r\nimport \"../styles.css\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  IconButton,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport FormTextField from \"../../textfield/FormTextField\";\r\nimport { tokens } from \"../../../assets/color/theme\";\r\nimport FormTextDropdown from \"../../dropdown/FormTextDropdown\";\r\nimport CustomizedButtons from \"../../button/CustomizedButtons\";\r\nimport {\r\n  getAllActiveRole,\r\n  getAllCountryRequest,\r\n  getStateByCountry,\r\n} from \"../../../pages/auth/users/service/users.request\";\r\nimport { useEffect } from \"react\";\r\nimport { getAllCompanyRequest } from \"../../../pages/app/serverIp/service/serverIp.request\";\r\n\r\nconst UserForm = (props) => {\r\n  const {\r\n    initialValue = {},\r\n    handleFormData,\r\n    onHandleClose,\r\n    clickedBtn,\r\n    errorMessage,\r\n    setErrorMessage,\r\n    company_id,\r\n  } = props;\r\n\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [name, setName] = useState({\r\n    value: initialValue ? initialValue.name : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [companyList, setCompanyList] = useState([]);\r\n  const [companyId, setCompanyId] = useState({\r\n    value: initialValue ? initialValue.company_id : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [userEmail, setUserEmail] = useState({\r\n    value: initialValue ? initialValue.email : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [userRole, setUserRole] = useState({\r\n    value: clickedBtn === \"edit\" ? initialValue?.roles[0]?.id : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [roleList, setRoleList] = useState([]);\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [userPhone, setUserPhone] = useState({\r\n    value: initialValue ? initialValue.mobile : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [userAddress, setUserAddress] = useState({\r\n    value: initialValue ? initialValue.address : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [selectCountry, setSelectCountry] = useState({\r\n    value: initialValue ? initialValue.country_id : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [stateData, setStateData] = useState([]);\r\n  const [state, setState] = useState({\r\n    value: initialValue ? initialValue.state_id : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [userCity, setUserCity] = useState({\r\n    value: initialValue ? initialValue.city : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [zipCode, setZipCode] = useState({\r\n    value: initialValue ? initialValue.zip : \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n  const [prefix, setPrefix] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem(\"user\"));\r\n    setIsAdmin(userData?.user_data.roles?.some((ele) => ele.slug === \"admin\"));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllCompanyRequest()\r\n      .then((res) => {\r\n        const result = res.data?.data?.data?.map((ele) => {\r\n          return {\r\n            value: ele.id,\r\n            label: ele.company_name,\r\n          };\r\n        });\r\n        setCompanyList(result);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    getAllActiveRole()\r\n      .then((res) => {\r\n        const filterRole = res.data.data?.map((ele) => {\r\n          return {\r\n            label: ele.name,\r\n            value: ele.id,\r\n          };\r\n        });\r\n        setRoleList(filterRole);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    getAllCountryRequest()\r\n      .then((res) => {\r\n        const filterCountry = res.data?.data?.map((ele) => {\r\n          return {\r\n            value: ele.id,\r\n            label: ele.country_name,\r\n            currency_symbol: ele.currency_symbol,\r\n            phone_code: ele.phone_code,\r\n          };\r\n        });\r\n        setCountryList(filterCountry);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    if (selectCountry.value !== \"\") {\r\n      let filterCountryData = countryList.filter(\r\n        (ele) => ele.value == selectCountry.value\r\n      );\r\n      setPrefix(filterCountryData[0]?.phone_code);\r\n    }\r\n  }, [selectCountry.value, countryList]);\r\n\r\n  useEffect(() => {\r\n    if (selectCountry.value !== \"\") {\r\n      getStateByCountry(selectCountry.value)\r\n        .then((res) => {\r\n          const filterState = res.data?.data?.map((ele) => {\r\n            return {\r\n              label: ele.state_name,\r\n              value: ele.id,\r\n            };\r\n          });\r\n          setStateData(filterState);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [selectCountry]);\r\n\r\n  const handleChangeName = (value) => {\r\n    setErrorMessage(\"\");\r\n    setName(value);\r\n  };\r\n  const handleChangeCompany = (value) => {\r\n    setErrorMessage(\"\");\r\n    setCompanyId(value);\r\n  };\r\n  const handleChangeEmail = (value) => {\r\n    setErrorMessage(\"\");\r\n    setUserEmail(value);\r\n  };\r\n  const handleChangeUserPhone = (val) => {\r\n    setErrorMessage(\"\");\r\n    setUserPhone(val);\r\n  };\r\n  const handleChangeAddress = (val) => {\r\n    setUserAddress(val);\r\n  };\r\n  const handleChangeCountry = (value) => {\r\n    setSelectCountry(value);\r\n  };\r\n  const handleChangeState = (value) => {\r\n    setState(value);\r\n  };\r\n  const handleChangeCity = (value) => {\r\n    setUserCity(value);\r\n  };\r\n  const handleChangeZip = (value) => {\r\n    setZipCode(value);\r\n  };\r\n  const handleChangeRole = (value) => {\r\n    setErrorMessage(\"\");\r\n    setUserRole(value);\r\n  };\r\n\r\n  const handleSubmitForm = () => {\r\n    const data = {\r\n      name: name.value,\r\n      email: userEmail.value,\r\n      role_id: isAdmin ? 11 : userRole.value,\r\n      country_id: selectCountry.value,\r\n      state_id: state.value,\r\n      city: userCity.value,\r\n      zip: zipCode.value,\r\n      mobile: userPhone.value,\r\n      address: userAddress.value,\r\n      company_id: company_id === \"0\" ? companyId.value : company_id,\r\n    };\r\n    handleFormData(data);\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" noValidate>\r\n      <Card\r\n        sx={{\r\n          boxShadow: \"none\",\r\n          backgroundColor: colors.form[500],\r\n          color: colors.form[100],\r\n        }}\r\n      >\r\n        <CardHeader\r\n          action={\r\n            <IconButton aria-label=\"settings\" onClick={onHandleClose}>\r\n              <MdClose color={colors.form[100]} />\r\n            </IconButton>\r\n          }\r\n          title={clickedBtn === \"add\" ? \"Add User\" : \"Update User\"}\r\n        />\r\n        {errorMessage && <span className=\"error_msg\">{errorMessage}</span>}\r\n        <CardContent color={colors.form[100]}>\r\n          <Box className={\"formResponsiveHeight\"}>\r\n            <Grid container>\r\n              <Grid item xs={12} md={12}>\r\n                <FormTextField\r\n                  type=\"textarea\"\r\n                  placeholder={\"Enter Name\"}\r\n                  label={\"Name\"}\r\n                  Value={name.value}\r\n                  onChangeText={handleChangeName}\r\n                  Required={true}\r\n                  CustomErrorLine={\"Enter proper name\"}\r\n                />\r\n              </Grid>\r\n              {company_id === \"0\" && (\r\n                <Grid item xs={12} md={12}>\r\n                  <FormTextDropdown\r\n                    Value={companyId.value}\r\n                    onSelect={handleChangeCompany}\r\n                    label={\"Company *\"}\r\n                    CustomErrorLine={\"Choose one\"}\r\n                    Required={true}\r\n                    Options={companyList}\r\n                    disable={clickedBtn === \"edit\" ? true : false}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              <Grid item xs={12} md={12}>\r\n                <FormTextField\r\n                  type=\"email\"\r\n                  placeholder={\"Enter Email\"}\r\n                  label={\"Email\"}\r\n                  Value={userEmail.value}\r\n                  onChangeText={handleChangeEmail}\r\n                  Required={true}\r\n                  CustomErrorLine={\"Enter proper email\"}\r\n                  isDisable={clickedBtn === \"edit\" ? true : false}\r\n                />\r\n              </Grid>\r\n              {!isAdmin && (\r\n                <Grid item xs={12} md={12}>\r\n                  <FormTextDropdown\r\n                    Value={userRole.value}\r\n                    onSelect={handleChangeRole}\r\n                    label={\"User Type\" + \" *\"}\r\n                    CustomErrorLine={\"Choose one\"}\r\n                    Required={true}\r\n                    Options={roleList}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              <Grid item xs={12} sm={12}>\r\n                <FormTextDropdown\r\n                  Value={selectCountry.value}\r\n                  onSelect={handleChangeCountry}\r\n                  label={\"Country *\"}\r\n                  placeholder={\"Enter Country Name\"}\r\n                  CustomErrorLine={\"Choose one\"}\r\n                  Required={true}\r\n                  Options={countryList}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <FormTextDropdown\r\n                  Value={state.value}\r\n                  onSelect={handleChangeState}\r\n                  label={\"State *\"}\r\n                  placeholder={\"Enter State Name\"}\r\n                  CustomErrorLine={\"Choose one\"}\r\n                  Required={true}\r\n                  Options={stateData}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <FormTextField\r\n                  type=\"textarea\"\r\n                  label={\"City\"}\r\n                  placeholder={\"Enter City Name\"}\r\n                  CustomErrorLine=\"Please enter a city name\"\r\n                  value={userCity.value}\r\n                  onChangeText={handleChangeCity}\r\n                  Required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <FormTextField\r\n                  type=\"alpha\"\r\n                  label={\"Zip\"}\r\n                  placeholder={\"Enter Zip Code\"}\r\n                  CustomErrorLine=\"Please enter zip code properly\"\r\n                  value={zipCode.value}\r\n                  onChangeText={handleChangeZip}\r\n                  Required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                <FormTextField\r\n                  type=\"phoneNo\"\r\n                  placeholder={\"Enter Number\"}\r\n                  label={\"Phone Number\"}\r\n                  Value={userPhone.value}\r\n                  onChangeText={handleChangeUserPhone}\r\n                  Required={true}\r\n                  CustomErrorLine={\"Enter proper number\"}\r\n                  prefix={prefix}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                <FormTextField\r\n                  type=\"textarea\"\r\n                  placeholder={\"Enter Address\"}\r\n                  label={\"Address\"}\r\n                  Value={userAddress.value}\r\n                  onChangeText={handleChangeAddress}\r\n                  Required={true}\r\n                  CustomErrorLine={\"Enter proper address\"}\r\n                  isMultiline={true}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </CardContent>\r\n\r\n        <CardActions sx={{ justifyContent: \"space-between\", mr: 1, ml: 1 }}>\r\n          <CustomizedButtons\r\n            label={\"Cancel\"}\r\n            type={\"cancel\"}\r\n            onClickBtn={onHandleClose}\r\n          />\r\n          <CustomizedButtons\r\n            label={clickedBtn === \"add\" ? \"Save\" : \"Update\"}\r\n            type={\"add\"}\r\n            onClickBtn={handleSubmitForm}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Box, Fab, Tooltip, Typography, useTheme } from \"@mui/material\";\r\nimport Breadcrumb from \"../../../../components/breadcrumb/BreadCrumb\";\r\nimport { TbHome2, TbUsers } from \"react-icons/tb\";\r\nimport { Add, Buildings2 } from \"iconsax-react\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { tokens } from \"../../../../assets/color/theme\";\r\nimport { FormModal as Modal } from \"../../../../components/modal/FormModal\";\r\nimport UserForm from \"../../../../components/form/userForm/UserForm\";\r\nimport StatusBadge from \"../../../../components/chip/StatusBadge\";\r\nimport {\r\n  createCompanyRequest,\r\n  createUserRequest,\r\n  getAllUsersRequest,\r\n  updateUsersRequest,\r\n  updateUsersStatusRequest,\r\n} from \"../service/users.request\";\r\nimport Loader from \"../../../../components/Loader/Loader\";\r\nimport CompanyForm from \"../../../../components/form/companyForm/CompanyForm\";\r\nimport DefaultTable from \"../../../../components/tables/DefaultTable\";\r\nimport { Pagination } from \"rsuite\";\r\nimport \"rsuite/dist/rsuite.css\";\r\nimport VerifyBadge from \"../../../../components/chip/VerifyBadge\";\r\nimport { isAuthorizedFunc } from \"../../../../utility/utilty\";\r\nimport {\r\n  CREATE_COMPANY,\r\n  CREATE_USER,\r\n  STATUS_USER,\r\n  UPDATE_USER,\r\n} from \"../../../../utility/constant\";\r\n\r\nconst paths = [\r\n  {\r\n    name: \"Dashboard\",\r\n    path: \"\",\r\n    icon: <TbHome2 />,\r\n  },\r\n  {\r\n    name: \"Users\",\r\n    icon: <TbUsers />,\r\n  },\r\n];\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst AuthUser = () => {\r\n  const getId = JSON.parse(localStorage.getItem(\"user\"));\r\n  const company_id = getId.user_data.company_id;\r\n\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [rows, setRows] = useState([]);\r\n  const [isLoader, setLoader] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [clickedBtn, setClickedBtn] = useState(\"\");\r\n  const [currentType, setCurrentType] = useState();\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [total, setTotal] = useState(0);\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [snackbarOpen, setSnackbarOpen] = useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"right\",\r\n  });\r\n  const [barVariant, setBarVariant] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const { vertical, horizontal, open } = snackbarOpen;\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: \"name\",\r\n        header: \"Name\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: true,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n      },\r\n      {\r\n        accessorKey: \"email\",\r\n        header: \"Email\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: true,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n      },\r\n      {\r\n        accessorKey: \"is_verified\",\r\n        header: \"Email Verify\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: false,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        Cell: ({ cell }) => <VerifyBadge value={cell.getValue()} />,\r\n        muiTableHeadCellProps: {\r\n          align: \"center\",\r\n        },\r\n        muiTableBodyCellProps: {\r\n          align: \"center\",\r\n        },\r\n      },\r\n      {\r\n        accessorKey: \"status\",\r\n        header: \"Status\",\r\n        enableColumnDragging: false,\r\n        enableGlobalFilter: false,\r\n        enableColumnFilter: false,\r\n        enableColumnActions: false,\r\n        Cell: ({ cell }) => <StatusBadge value={cell.getValue()} />,\r\n        muiTableHeadCellProps: {\r\n          align: \"left\",\r\n        },\r\n        muiTableBodyCellProps: {\r\n          align: \"left\",\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackbarOpen({ ...snackbarOpen, open: false });\r\n  };\r\n\r\n  const getAllUsers = (activePage, limit) => {\r\n    setLoader(true);\r\n    getAllUsersRequest(activePage, limit)\r\n      .then((res) => {\r\n        let getData = res.data.data.length === 0 ? [] : res.data.data.data;\r\n        setRows(getData);\r\n        setTotal(res.data.data.length === 0 ? 0 : res.data.data?.total);\r\n        setLoader(false);\r\n      })\r\n      .catch(() => {\r\n        setLoader(false);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getAllUsers(activePage, limit);\r\n  }, [activePage, limit]);\r\n\r\n  const openAddModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const handleModalClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleSelectBtn = (btn) => {\r\n    setClickedBtn(btn);\r\n  };\r\n\r\n  const handleChangeEdit = (ele) => {\r\n    setClickedBtn(\"edit\");\r\n    setCurrentType(ele);\r\n    setIsOpen(true);\r\n  };\r\n  const handleStatusChange = (body) => {\r\n    setLoader(true);\r\n    const data = {\r\n      id: body.id,\r\n      status: body.status === 1 ? 0 : 1,\r\n    };\r\n    updateUsersStatusRequest(data)\r\n      .then((res) => {\r\n        getAllUsers(activePage, limit);\r\n        setBarVariant(\"success\");\r\n        setMessage(res.data.message);\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setErrorMessage(\"\");\r\n        setIsOpen(false);\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n      });\r\n  };\r\n\r\n  const handleAddUser = (value) => {\r\n    setLoader(true);\r\n    createUserRequest(value)\r\n      .then((res) => {\r\n        getAllUsers(activePage, limit);\r\n        setErrorMessage(\"\");\r\n        setLoader(false);\r\n        setBarVariant(\"success\");\r\n        setMessage(res.data.message);\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setIsOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n        setErrorMessage(err.message);\r\n      });\r\n  };\r\n  const handleAddCompany = (value) => {\r\n    setLoader(true);\r\n    createCompanyRequest(value)\r\n      .then((res) => {\r\n        getAllUsers(activePage, limit);\r\n        setErrorMessage(\"\");\r\n        setIsOpen(false);\r\n        setBarVariant(\"success\");\r\n        setMessage(res.data.message);\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n        setErrorMessage(err.message);\r\n      });\r\n  };\r\n\r\n  const handleUpdateUser = (value) => {\r\n    const updateData = {\r\n      data: {\r\n        name: value.name,\r\n        email: value.email,\r\n        role_id: value.role_id,\r\n        country_id: value.country_id,\r\n        state_id: value.state_id,\r\n        city: value.city,\r\n        zip: value.zip,\r\n        mobile: value.mobile,\r\n        address: value.address,\r\n        company_id: value.company_id,\r\n        status: currentType.status,\r\n      },\r\n      id: currentType.id,\r\n    };\r\n    setLoader(true);\r\n    updateUsersRequest(updateData)\r\n      .then((res) => {\r\n        getAllUsers(activePage, limit);\r\n        setErrorMessage(\"\");\r\n        setIsOpen(false);\r\n        setBarVariant(\"success\");\r\n        setMessage(res.data.message);\r\n        setSnackbarOpen({ ...snackbarOpen, open: true });\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n        setErrorMessage(err.message);\r\n      });\r\n  };\r\n\r\n  const selectModal = () => {\r\n    if (clickedBtn === \"add\") {\r\n      return (\r\n        <UserForm\r\n          handleFormData={handleAddUser}\r\n          onHandleClose={handleModalClose}\r\n          clickedBtn={clickedBtn}\r\n          initialValue={{}}\r\n          errorMessage={errorMessage}\r\n          setErrorMessage={setErrorMessage}\r\n          company_id={company_id}\r\n        />\r\n      );\r\n    } else if (clickedBtn === \"edit\") {\r\n      return (\r\n        <UserForm\r\n          handleFormData={handleUpdateUser}\r\n          onHandleClose={handleModalClose}\r\n          clickedBtn={clickedBtn}\r\n          initialValue={currentType}\r\n          errorMessage={errorMessage}\r\n          setErrorMessage={setErrorMessage}\r\n          company_id={company_id}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <CompanyForm\r\n          handleFormData={handleAddCompany}\r\n          onHandleClose={handleModalClose}\r\n          errorMessage={errorMessage}\r\n          setErrorMessage={setErrorMessage}\r\n          clickedBtn={\"add\"}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoader && <Loader />}\r\n      <Snackbar\r\n        open={open}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert\r\n          onClose={handleClose}\r\n          severity={barVariant}\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Box\r\n        sx={{\r\n          \"& .rs-pagination-group\": {\r\n            color: colors.layoutColor[200],\r\n          },\r\n          \"& .MuiTypography-root\": {\r\n            color: colors.layoutColor[200],\r\n          },\r\n          mt: 1,\r\n          ml: 2,\r\n          mr: 2,\r\n          mb: 2,\r\n          height: \"80%\",\r\n          backgroundColor: \"inherit\",\r\n        }}\r\n      >\r\n        <Breadcrumb pathList={paths} />\r\n        <Box>\r\n          {isLoader && <h2>Loader</h2>}\r\n          <Modal modal_width={\"40%\"} isOpen={isOpen}>\r\n            {selectModal()}\r\n          </Modal>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              mb: 2,\r\n            }}\r\n          >\r\n            <div>\r\n              <Typography variant=\"h5\">{\"Manage Users\"}</Typography>\r\n            </div>\r\n            <div style={{ zIndex: 1 }}>\r\n              {company_id === \"0\" && (\r\n                <>\r\n                  {isAuthorizedFunc(CREATE_COMPANY) && (\r\n                    <Fab\r\n                      aria-label=\"add\"\r\n                      size=\"small\"\r\n                      sx={{\r\n                        boxShadow: \"none\",\r\n                        backgroundColor: colors.greenAccent[500],\r\n                        mr: 2,\r\n                      }}\r\n                      onClick={() => {\r\n                        openAddModal();\r\n                        handleSelectBtn(\"company\");\r\n                      }}\r\n                    >\r\n                      <Tooltip title=\"Company\">\r\n                        <Buildings2 size=\"18\" />\r\n                      </Tooltip>\r\n                    </Fab>\r\n                  )}\r\n                </>\r\n              )}\r\n              {isAuthorizedFunc(CREATE_USER) && (\r\n                <Fab\r\n                  aria-label=\"add\"\r\n                  size=\"small\"\r\n                  sx={{\r\n                    boxShadow: \"none\",\r\n                    backgroundColor: colors.greenAccent[500],\r\n                  }}\r\n                  onClick={() => {\r\n                    openAddModal();\r\n                    handleSelectBtn(\"add\");\r\n                  }}\r\n                >\r\n                  <Tooltip title=\"Add\">\r\n                    <Add />\r\n                  </Tooltip>\r\n                </Fab>\r\n              )}\r\n            </div>\r\n          </Box>\r\n\r\n          <Box>\r\n            <DefaultTable\r\n              data={rows}\r\n              column={columns}\r\n              handleEditAction={handleChangeEdit}\r\n              handleStatusAction={handleStatusChange}\r\n              isSearchable={true}\r\n              isEditable={isAuthorizedFunc(UPDATE_USER)}\r\n              isDeletable={false}\r\n              isStatusChangable={isAuthorizedFunc(STATUS_USER)}\r\n            />\r\n            <Pagination\r\n              style={{\r\n                marginTop: 5,\r\n              }}\r\n              layout={[\"total\", \"-\", \"pager\", \"skip\"]}\r\n              size={\"xs\"}\r\n              prev={true}\r\n              next={true}\r\n              first={true}\r\n              last={true}\r\n              ellipsis={true}\r\n              boundaryLinks={true}\r\n              total={total}\r\n              limit={limit}\r\n              maxButtons={5}\r\n              activePage={activePage}\r\n              onChangePage={setActivePage}\r\n              limitOptions={[5, 10, 25, 50, 100]}\r\n              onChangeLimit={setLimit}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthUser;\r\n","import { axios } from \"../../../../api/setup.interseptor\";\r\n\r\nexport const getAllUsersRequest = (page, perpage) => {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/user?page=${page}&perpage=${perpage}`,\r\n  });\r\n};\r\nexport const getAllCompanyUsersRequest = (page, perpage) => {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/user?page=${page}&perpage=${perpage}`,\r\n  });\r\n};\r\nexport const getAllActiveRole = () =>{\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/role/active`,\r\n  })\r\n}\r\nexport const createUsersRequest = (body) => {\r\n  return axios({\r\n    method: \"POST\",\r\n    url: \"/user\",\r\n    data: body,\r\n  });\r\n};\r\nexport const updateUsersRequest = (value) => {\r\n  return axios({\r\n    method: \"PUT\",\r\n    url: `/user/${value.id}`,\r\n    data: value.data,\r\n  });\r\n};\r\nexport const updateUsersStatusRequest = (body) => {\r\n  return axios({\r\n    method: \"PATCH\",\r\n    url: `/user/changeStatus/${body.id}`,\r\n    data: { status: body.status },\r\n  });\r\n};\r\n\r\nexport const getAllCountryRequest = () => {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: \"/countries\" ,\r\n  });\r\n};\r\nexport const getStateByCountry = (id) =>{\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/states/${id}`\r\n  })\r\n}\r\nexport const createUserRequest = (body) => {\r\n  return axios({\r\n    method: \"POST\",\r\n    url: \"/user\",\r\n    data: body,\r\n  });\r\n};\r\n\r\nexport const createCompanyRequest = (body) => {\r\n  return axios({\r\n    method: \"POST\",\r\n    url: \"/company\",\r\n    data: body,\r\n  });\r\n};\r\nexport const getAllCompanyRequest = () =>{\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/company`,\r\n  })\r\n}"],"names":["props","pathList","StyledBreadcrumb","styled","Chip","_ref","theme","backgroundColor","palette","mode","grey","height","spacing","color","fontWeight","typography","fontWeightRegular","emphasize","boxShadow","shadows","_jsx","role","children","Breadcrumbs","length","map","item","index","label","name","icon","Link","to","pathname","concat","path","onClickBtn","type","isDisable","useTheme","colors","tokens","SaveButton","Button","textTransform","padding","border","lineHeight","greenAccent","btn","fontFamily","join","CancelButton","handleClickBtn","e","preventDefault","Stack","direction","size","variant","disabled","onClick","Box","sx","width","display","whiteSpace","value","redAccent","GoVerified","GoUnverified","Options","Value","CustomErrorLine","multiSelect","Required","disable","defaultValue","onSelect","rest","selectValue","setSelectValue","useState","error","success","multSelectValue","setMultiSelectValue","setError","_jsxs","FormControl","fullWidth","margin","InputLabel","id","Select","labelId","required","multiple","onChange","data","target","onBlur","input","OutlinedInput","renderValue","selected","flexWrap","gap","_Options$find","find","MenuItem","Checkbox","checked","includes","ListItemText","primary","autoComplete","event","handleChangeBlur","ele","FormHelperText","marginLeft","handleFormData","onHandleClose","errorMessage","setErrorMessage","clickedBtn","initialValue","isLoader","setLoader","companyName","setCompanyName","company_name","fullName","setFullName","email","setEmail","phone","setPhone","mobile","address","setAddress","billing_address","countryList","setCountryList","country","setCountry","country_id","stateList","setStateList","state","setState","state_id","city","setCity","zipCode","setZipCode","zip","useEffect","getAllCountryRequest","then","res","filterCountry","country_name","phone_code","catch","err","console","log","getStateByCountry","filterState","state_name","_Fragment","Loader","component","noValidate","Card","form","CardHeader","action","IconButton","MdClose","title","className","CardContent","Grid","container","xs","md","FormTextField","placeholder","onChangeText","sm","val","isMultiline","FormTextDropdown","CardActions","justifyContent","mr","ml","parseInt","handleSubmitForm","style","position","top","left","transform","bgcolor","p","borderRadius","scrollbars","FormModal","modal_width","isOpen","handleClose","Modal","open","onClose","column","handleEditAction","handleDeleteAction","handleStatusAction","handlePlayPause","isEditable","isDeletable","isStatusChangable","isPlayPause","StatusSwitch","Switch","switchColor","alpha","hoverOpacity","MaterialReactTable","layoutMode","enableBottomToolbar","displayColumnDefOptions","muiTableHeadCellProps","align","initialState","density","showGlobalFilter","positionGlobalFilter","muiSearchTextFieldProps","minWidth","enableEditing","enableColumnFilters","enableColumnActions","enableFullScreenToggle","enableStickyHeader","enableGlobalFilterModes","enableDensityToggle","enableToolbarInternalActions","enableFilterMatchHighlighting","enableColumnFilterModes","columns","enableColumnOrdering","positionActionsColumn","renderRowActions","_ref2","row","alignItems","Tooltip","arrow","placement","disableRipple","disableFocusRipple","disableTouchRipple","original","status","handleChangeStatus","handleChangePlayPause","MdPhonePaused","MdPhoneCallback","handleChangeEdit","Edit","deleted_at","handleChangeDelete","MdDeleteForever","MdOutlineSettingsBackupRestore","blue","getAllIpRequest","page","perpage","axios","method","url","getActiveIpRequest","createIpRequest","body","updateIpRequest","updateIpStatusRequest","getAllCompanyRequest","_initialValue$roles$","company_id","isAdmin","setIsAdmin","setName","companyList","setCompanyList","companyId","setCompanyId","userEmail","setUserEmail","userRole","setUserRole","roles","roleList","setRoleList","userPhone","setUserPhone","userAddress","setUserAddress","selectCountry","setSelectCountry","stateData","setStateData","userCity","setUserCity","prefix","setPrefix","_userData$user_data$r","userData","JSON","parse","localStorage","getItem","user_data","some","slug","_res$data","_res$data$data","_res$data$data$data","result","getAllActiveRole","_res$data$data2","filterRole","_res$data2","_res$data2$data","currency_symbol","_filterCountryData$","filterCountryData","filter","_res$data3","_res$data3$data","CustomizedButtons","role_id","paths","TbHome2","TbUsers","Alert","React","ref","MuiAlert","elevation","AuthUser","rows","setRows","setIsOpen","setClickedBtn","currentType","setCurrentType","total","setTotal","activePage","setActivePage","limit","setLimit","snackbarOpen","setSnackbarOpen","vertical","horizontal","barVariant","setBarVariant","message","setMessage","useMemo","accessorKey","header","enableColumnDragging","enableGlobalFilter","enableColumnFilter","muiTableBodyCellProps","Cell","cell","VerifyBadge","getValue","StatusBadge","reason","getAllUsers","getAllUsersRequest","getData","openAddModal","handleModalClose","handleSelectBtn","handleAddUser","createUserRequest","handleAddCompany","createCompanyRequest","handleUpdateUser","updateData","updateUsersRequest","Snackbar","anchorOrigin","autoHideDuration","severity","layoutColor","mt","mb","Breadcrumb","UserForm","CompanyForm","Typography","zIndex","isAuthorizedFunc","CREATE_COMPANY","Fab","Buildings2","CREATE_USER","Add","DefaultTable","updateUsersStatusRequest","isSearchable","UPDATE_USER","STATUS_USER","Pagination","marginTop","layout","prev","next","first","last","ellipsis","boundaryLinks","maxButtons","onChangePage","limitOptions","onChangeLimit"],"sourceRoot":""}