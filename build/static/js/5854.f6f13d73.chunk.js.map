{"version":3,"file":"static/js/5854.f6f13d73.chunk.js","mappings":"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","sources":["components/breadcrumb/BreadCrumb.jsx","components/footer/footerString.js","components/footer/Footer.jsx","components/cards/CallCard.jsx","pages/app/dashboard/component/Dasboard.jsx","translation/index.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport { emphasize, styled } from \"@mui/material/styles\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nconst Breadcrumb = (props) => {\r\n  const { pathList } = props;\r\n\r\n  const StyledBreadcrumb = styled(Chip)(({ theme }) => {\r\n    const backgroundColor =\r\n      theme.palette.mode === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[800];\r\n    return {\r\n      backgroundColor,\r\n      height: theme.spacing(3),\r\n      color: theme.palette.mode === \"light\" ? \"#141414\" : \"#f3f6f4\",\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      \"&:hover, &:focus\": {\r\n        backgroundColor: emphasize(backgroundColor, 0.06),\r\n      },\r\n      \"&:active\": {\r\n        boxShadow: theme.shadows[1],\r\n        backgroundColor: emphasize(backgroundColor, 0.12),\r\n      },\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div role=\"presentation\">\r\n      <Breadcrumbs aria-label=\"breadcrumb\">\r\n        {pathList.length &&\r\n          pathList.map((item, index) => {\r\n            if (index === pathList.length - 1) {\r\n              return (\r\n                <StyledBreadcrumb\r\n                  label={item.name}\r\n                  key={index}\r\n                  icon={item.icon}\r\n                />\r\n              );\r\n            } else {\r\n              return (\r\n                <Link\r\n                  to={{\r\n                    pathname: `/${item.path}`,\r\n                  }}\r\n                  key={index}\r\n                >\r\n                  <StyledBreadcrumb icon={item.icon} label={item.name} />\r\n                </Link>\r\n              );\r\n            }\r\n          })}\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import strings from \"../../translation/index\";\r\n\r\nexport const FOOTER_WEBSITE_RIGHTS = strings[\"FOOTER.WEBSITE.RIGHTS\"];\r\nexport const FOOTER_WEBSITE_LABEL = strings[\"FOOTER.WEBSITE.LABEL\"];\r\n","import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport Link from '@mui/material/Link';\r\nimport { FOOTER_WEBSITE_LABEL, FOOTER_WEBSITE_RIGHTS } from './footerString';\r\n\r\nconst Copyright = (props) => {\r\n    return (\r\n        <Typography mt={1} variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {FOOTER_WEBSITE_RIGHTS}\r\n            <Link className=\"Url_link\" color=\"inherit\" href=\"http://www.textricks.com/\">\r\n                {FOOTER_WEBSITE_LABEL}\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default Copyright;\r\n\r\n","import React from \"react\";\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { BiUpArrowAlt } from \"react-icons/bi\";\r\nimport { tokens } from \"../../assets/color/theme\";\r\n\r\nconst ReportCard = ({ title, value, percentage, captionTitle, icon }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  return (\r\n    <Card sx={{ height: 100 }}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          sx={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              sx={{ fontWeight: 700 }}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"h3\">{value}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar\r\n              sx={{\r\n                backgroundColor: colors.primary[900],\r\n                height: 56,\r\n                width: 56,\r\n              }}\r\n            >\r\n              {icon}\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <div\r\n          style={{\r\n            marginTop: 2,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <BiUpArrowAlt />\r\n          <Typography sx={{ marginRight: 1 }} variant=\"body2\">\r\n            {percentage}\r\n          </Typography>\r\n          <Typography variant=\"caption\">{captionTitle}</Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ReportCard;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport { TbHome2 } from \"react-icons/tb\";\r\nimport Breadcrumb from \"../../../../components/breadcrumb/BreadCrumb\";\r\nimport ReportCard from \"../../../../components/cards/CallCard\";\r\nimport { FcCallTransfer, FcEndCall, FcMissedCall } from \"react-icons/fc\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { BsArrowDownShort } from \"react-icons/bs\";\r\nimport Copyright from \"../../../../components/footer/Footer\";\r\n\r\nconst paths = [\r\n  {\r\n    name: \"Dashboard\",\r\n    path: \"\",\r\n    icon: <TbHome2 />,\r\n  },\r\n];\r\n\r\nconst fakeData = {\r\n  series: [\r\n    {\r\n      name: \"Answer\",\r\n      data: [44, 55, 41, 67, 22, 43],\r\n    },\r\n    {\r\n      name: \"Cancel\",\r\n      data: [13, 23, 20, 8, 13, 27],\r\n    },\r\n    {\r\n      name: \"Busy\",\r\n      data: [11, 17, 15, 15, 21, 14],\r\n    },\r\n    {\r\n      name: \"Congestion\",\r\n      data: [21, 7, 25, 13, 22, 8],\r\n    },\r\n    {\r\n      name: \"Chanunavail\",\r\n      data: [21, 7, 25, 13, 22, 8],\r\n    },\r\n  ],\r\n\r\n  options: {\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 350,\r\n      stacked: true,\r\n      zoom: {\r\n        enabled: false,\r\n      },\r\n    },\r\n\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n      },\r\n    },\r\n    xaxis: {\r\n      type: \"datetime\",\r\n      categories: [\r\n        \"01/01/2011 GMT\",\r\n        \"01/02/2011 GMT\",\r\n        \"01/03/2011 GMT\",\r\n        \"01/04/2011 GMT\",\r\n        \"01/05/2011 GMT\",\r\n        \"01/06/2011 GMT\",\r\n      ],\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n    },\r\n    // colors: [\"#04B404\", \"#FE2E2E\", \"#FFFF00\", \"#008FFB\", \"#80f1cb\"],\r\n    legend: {\r\n      position: \"top\",\r\n      horizontalAlign: \"left\",\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 480,\r\n        legend: {\r\n          position: \"bottom\",\r\n        },\r\n        options: {\r\n          chart: {\r\n            width: 200,\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst priceReport = {\r\n  series: [44, 55, 41],\r\n  options: {\r\n    chart: {\r\n      width: 380,\r\n      type: \"donut\",\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        startAngle: -90,\r\n        endAngle: 270,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    fill: {\r\n      type: \"gradient\",\r\n    },\r\n    legend: {\r\n      formatter: function (val, opts) {\r\n        return val + \" - \" + opts.w.globals.series[opts.seriesIndex];\r\n      },\r\n      position: \"top\",\r\n      horizontalAlign: \"left\",\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 480,\r\n        options: {\r\n          chart: {\r\n            width: 200,\r\n          },\r\n          legend: {\r\n            position: \"bottom\",\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst Dasboard = (props) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        mt: 1,\r\n        ml: 2,\r\n        mr: 2,\r\n        mb: 2,\r\n        height: \"80%\",\r\n        backgroundColor: \"inherit\",\r\n      }}\r\n    >\r\n      <Breadcrumb pathList={paths} />\r\n      <Box>\r\n        <Grid container spacing={4} marginTop={\"auto\"}>\r\n          <Grid item lg={4} sm={6} xl={4} xs={12}>\r\n            <ReportCard\r\n              icon={<FcCallTransfer style={{ height: 32, width: 32 }} />}\r\n              value={0}\r\n              percentage={\"25%\"}\r\n              captionTitle=\"higher\"\r\n              title={\"Incoming Calls Today\"}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} sm={6} xl={4} xs={12}>\r\n            <ReportCard\r\n              icon={<FcEndCall style={{ height: 32, width: 32 }} />}\r\n              value={0}\r\n              percentage={\"2%\"}\r\n              captionTitle=\"higher\"\r\n              title={\"Picked Calls Today\"}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} sm={6} xl={4} xs={12}>\r\n            <ReportCard\r\n              icon={<FcMissedCall style={{ height: 32, width: 32 }} />}\r\n              value={0}\r\n              percentage={\"0%\"}\r\n              captionTitle=\"higher\"\r\n              title={\"Missed Calls Today\"}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={4} marginTop={\"auto\"}>\r\n          <Grid item lg={7} sm={7} xl={7} xs={12}>\r\n            <Card sx={{ height: \"450px\" }}>\r\n              <CardHeader\r\n                title=\"Latest call history\"\r\n                action={\r\n                  <Button size=\"small\" variant=\"text\">\r\n                    Last 7 days <BsArrowDownShort />\r\n                  </Button>\r\n                }\r\n              />\r\n              <Divider />\r\n              <CardContent>\r\n                <ReactApexChart\r\n                  options={fakeData.options}\r\n                  series={fakeData.series}\r\n                  type=\"bar\"\r\n                  height={350}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item lg={5} sm={5} xl={5} xs={12}>\r\n            <Card sx={{ height: \"450px\" }}>\r\n              <CardHeader\r\n                title=\"Latest call history\"\r\n                action={\r\n                  <Button size=\"small\" variant=\"text\">\r\n                    Last 7 days <BsArrowDownShort />\r\n                  </Button>\r\n                }\r\n              />\r\n              <Divider />\r\n              <CardContent>\r\n                <ReactApexChart\r\n                  options={priceReport.options}\r\n                  series={priceReport.series}\r\n                  type=\"donut\"\r\n                  height={350}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Copyright />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dasboard;\r\n","import en from \"./en.json\";\nimport LocalizedStrings from \"react-localization\";\n\nexport let localLang = JSON.parse(localStorage.getItem(\"lang\"))\n  ? JSON.parse(localStorage.getItem(\"lang\"))\n  : \"en\";\n\nlet strings;\n\nif (!strings) {\n  strings = new LocalizedStrings({\n    en,\n  });\n}\n\nstrings.setLanguage(localLang);\n\nexport default strings;\n"],"names":["props","pathList","StyledBreadcrumb","styled","Chip","_ref","theme","backgroundColor","palette","mode","grey","height","spacing","color","fontWeight","typography","fontWeightRegular","emphasize","boxShadow","shadows","_jsx","role","children","Breadcrumbs","length","map","item","index","label","name","icon","Link","to","pathname","concat","path","FOOTER_WEBSITE_RIGHTS","strings","FOOTER_WEBSITE_LABEL","_jsxs","Typography","mt","variant","align","className","href","Date","getFullYear","title","value","percentage","captionTitle","useTheme","colors","tokens","Card","sx","CardContent","Grid","container","display","justifyContent","gutterBottom","Avatar","primary","width","style","marginTop","alignItems","BiUpArrowAlt","marginRight","paths","TbHome2","fakeData","series","data","options","chart","type","stacked","zoom","enabled","plotOptions","bar","horizontal","xaxis","categories","fill","opacity","legend","position","horizontalAlign","responsive","breakpoint","priceReport","pie","startAngle","endAngle","dataLabels","formatter","val","opts","w","globals","seriesIndex","Box","ml","mr","mb","Breadcrumb","lg","sm","xl","xs","ReportCard","FcCallTransfer","FcEndCall","FcMissedCall","CardHeader","action","Button","size","BsArrowDownShort","Divider","ReactApexChart","Copyright","localLang","JSON","parse","localStorage","getItem","LocalizedStrings","en","setLanguage"],"sourceRoot":""}